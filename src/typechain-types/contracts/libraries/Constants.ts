/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from 'ethers';
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from '../../common';

export interface ConstantsInterface extends Interface {
  getFunction(
    nameOrSignature:
      | 'DELEGATED_KEY_AUTHORIZATION_MESSAGE_HASH'
      | 'DEPOSIT_INDEX_NOT_SET'
      | 'EIP_712_DOMAIN_NAME'
      | 'EIP_712_DOMAIN_VERSION'
      | 'EIP_712_TYPE_HASH_DELEGATED_KEY_AUTHORIZATION'
      | 'EIP_712_TYPE_HASH_DOMAIN'
      | 'EIP_712_TYPE_HASH_ORDER'
      | 'EIP_712_TYPE_HASH_TRANSFER'
      | 'EIP_712_TYPE_HASH_WITHDRAWAL'
      | 'EMPTY_DECIMAL_STRING'
      | 'EXIT_FUND_WITHDRAW_DELAY_IN_S'
      | 'FIELD_UPGRADE_DELAY_IN_S'
      | 'FUNDING_PERIOD_IN_MS'
      | 'MAX_CHAIN_PROPAGATION_PERIOD_IN_S'
      | 'MAX_DELEGATE_KEY_EXPIRATION_PERIOD_IN_MS'
      | 'MAX_FEE_MULTIPLIER'
      | 'MAX_FUNDING_TIME_PERIOD_PER_UPDATE_IN_MS'
      | 'MAX_MAXIMUM_POSITION_SIZE'
      | 'MAX_NUMBER_OF_MARKETS'
      | 'MINIMUM_QUOTE_QUANTITY_VALIDATION_THRESHOLD'
      | 'PIP_PRICE_MULTIPLIER'
      | 'QUOTE_ASSET_SYMBOL'
      | 'QUOTE_TOKEN_DECIMALS',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'DELEGATED_KEY_AUTHORIZATION_MESSAGE_HASH',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'DEPOSIT_INDEX_NOT_SET',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EIP_712_DOMAIN_NAME',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EIP_712_DOMAIN_VERSION',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EIP_712_TYPE_HASH_DELEGATED_KEY_AUTHORIZATION',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EIP_712_TYPE_HASH_DOMAIN',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EIP_712_TYPE_HASH_ORDER',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EIP_712_TYPE_HASH_TRANSFER',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EIP_712_TYPE_HASH_WITHDRAWAL',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EMPTY_DECIMAL_STRING',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'EXIT_FUND_WITHDRAW_DELAY_IN_S',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'FIELD_UPGRADE_DELAY_IN_S',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'FUNDING_PERIOD_IN_MS',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MAX_CHAIN_PROPAGATION_PERIOD_IN_S',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MAX_DELEGATE_KEY_EXPIRATION_PERIOD_IN_MS',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MAX_FEE_MULTIPLIER',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MAX_FUNDING_TIME_PERIOD_PER_UPDATE_IN_MS',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MAX_MAXIMUM_POSITION_SIZE',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MAX_NUMBER_OF_MARKETS',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MINIMUM_QUOTE_QUANTITY_VALIDATION_THRESHOLD',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'PIP_PRICE_MULTIPLIER',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'QUOTE_ASSET_SYMBOL',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'QUOTE_TOKEN_DECIMALS',
    values?: undefined,
  ): string;

  decodeFunctionResult(
    functionFragment: 'DELEGATED_KEY_AUTHORIZATION_MESSAGE_HASH',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'DEPOSIT_INDEX_NOT_SET',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EIP_712_DOMAIN_NAME',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EIP_712_DOMAIN_VERSION',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EIP_712_TYPE_HASH_DELEGATED_KEY_AUTHORIZATION',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EIP_712_TYPE_HASH_DOMAIN',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EIP_712_TYPE_HASH_ORDER',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EIP_712_TYPE_HASH_TRANSFER',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EIP_712_TYPE_HASH_WITHDRAWAL',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EMPTY_DECIMAL_STRING',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'EXIT_FUND_WITHDRAW_DELAY_IN_S',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'FIELD_UPGRADE_DELAY_IN_S',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'FUNDING_PERIOD_IN_MS',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MAX_CHAIN_PROPAGATION_PERIOD_IN_S',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MAX_DELEGATE_KEY_EXPIRATION_PERIOD_IN_MS',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MAX_FEE_MULTIPLIER',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MAX_FUNDING_TIME_PERIOD_PER_UPDATE_IN_MS',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MAX_MAXIMUM_POSITION_SIZE',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MAX_NUMBER_OF_MARKETS',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MINIMUM_QUOTE_QUANTITY_VALIDATION_THRESHOLD',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'PIP_PRICE_MULTIPLIER',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'QUOTE_ASSET_SYMBOL',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'QUOTE_TOKEN_DECIMALS',
    data: BytesLike,
  ): Result;
}

export interface Constants extends BaseContract {
  connect(runner?: ContractRunner | null): Constants;
  waitForDeployment(): Promise<this>;

  interface: ConstantsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent,
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent,
  ): Promise<this>;

  DELEGATED_KEY_AUTHORIZATION_MESSAGE_HASH: TypedContractMethod<
    [],
    [string],
    'view'
  >;

  DEPOSIT_INDEX_NOT_SET: TypedContractMethod<[], [bigint], 'view'>;

  EIP_712_DOMAIN_NAME: TypedContractMethod<[], [string], 'view'>;

  EIP_712_DOMAIN_VERSION: TypedContractMethod<[], [string], 'view'>;

  EIP_712_TYPE_HASH_DELEGATED_KEY_AUTHORIZATION: TypedContractMethod<
    [],
    [string],
    'view'
  >;

  EIP_712_TYPE_HASH_DOMAIN: TypedContractMethod<[], [string], 'view'>;

  EIP_712_TYPE_HASH_ORDER: TypedContractMethod<[], [string], 'view'>;

  EIP_712_TYPE_HASH_TRANSFER: TypedContractMethod<[], [string], 'view'>;

  EIP_712_TYPE_HASH_WITHDRAWAL: TypedContractMethod<[], [string], 'view'>;

  EMPTY_DECIMAL_STRING: TypedContractMethod<[], [string], 'view'>;

  EXIT_FUND_WITHDRAW_DELAY_IN_S: TypedContractMethod<[], [bigint], 'view'>;

  FIELD_UPGRADE_DELAY_IN_S: TypedContractMethod<[], [bigint], 'view'>;

  FUNDING_PERIOD_IN_MS: TypedContractMethod<[], [bigint], 'view'>;

  MAX_CHAIN_PROPAGATION_PERIOD_IN_S: TypedContractMethod<[], [bigint], 'view'>;

  MAX_DELEGATE_KEY_EXPIRATION_PERIOD_IN_MS: TypedContractMethod<
    [],
    [bigint],
    'view'
  >;

  MAX_FEE_MULTIPLIER: TypedContractMethod<[], [bigint], 'view'>;

  MAX_FUNDING_TIME_PERIOD_PER_UPDATE_IN_MS: TypedContractMethod<
    [],
    [bigint],
    'view'
  >;

  MAX_MAXIMUM_POSITION_SIZE: TypedContractMethod<[], [bigint], 'view'>;

  MAX_NUMBER_OF_MARKETS: TypedContractMethod<[], [bigint], 'view'>;

  MINIMUM_QUOTE_QUANTITY_VALIDATION_THRESHOLD: TypedContractMethod<
    [],
    [bigint],
    'view'
  >;

  PIP_PRICE_MULTIPLIER: TypedContractMethod<[], [bigint], 'view'>;

  QUOTE_ASSET_SYMBOL: TypedContractMethod<[], [string], 'view'>;

  QUOTE_TOKEN_DECIMALS: TypedContractMethod<[], [bigint], 'view'>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment,
  ): T;

  getFunction(
    nameOrSignature: 'DELEGATED_KEY_AUTHORIZATION_MESSAGE_HASH',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'DEPOSIT_INDEX_NOT_SET',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'EIP_712_DOMAIN_NAME',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'EIP_712_DOMAIN_VERSION',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'EIP_712_TYPE_HASH_DELEGATED_KEY_AUTHORIZATION',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'EIP_712_TYPE_HASH_DOMAIN',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'EIP_712_TYPE_HASH_ORDER',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'EIP_712_TYPE_HASH_TRANSFER',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'EIP_712_TYPE_HASH_WITHDRAWAL',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'EMPTY_DECIMAL_STRING',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'EXIT_FUND_WITHDRAW_DELAY_IN_S',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'FIELD_UPGRADE_DELAY_IN_S',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'FUNDING_PERIOD_IN_MS',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'MAX_CHAIN_PROPAGATION_PERIOD_IN_S',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'MAX_DELEGATE_KEY_EXPIRATION_PERIOD_IN_MS',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'MAX_FEE_MULTIPLIER',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'MAX_FUNDING_TIME_PERIOD_PER_UPDATE_IN_MS',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'MAX_MAXIMUM_POSITION_SIZE',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'MAX_NUMBER_OF_MARKETS',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'MINIMUM_QUOTE_QUANTITY_VALIDATION_THRESHOLD',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'PIP_PRICE_MULTIPLIER',
  ): TypedContractMethod<[], [bigint], 'view'>;
  getFunction(
    nameOrSignature: 'QUOTE_ASSET_SYMBOL',
  ): TypedContractMethod<[], [string], 'view'>;
  getFunction(
    nameOrSignature: 'QUOTE_TOKEN_DECIMALS',
  ): TypedContractMethod<[], [bigint], 'view'>;

  filters: {};
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  FunctionFragment,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from 'ethers';
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from '../../common';

export interface WalletInMaintenanceLiquidationInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic:
      | 'LiquidatedWalletInMaintenance'
      | 'LiquidatedWalletInMaintenanceDuringSystemRecovery',
  ): EventFragment;
}

export namespace LiquidatedWalletInMaintenanceEvent {
  export type InputTuple = [liquidatingWallet: AddressLike];
  export type OutputTuple = [liquidatingWallet: string];
  export interface OutputObject {
    liquidatingWallet: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent {
  export type InputTuple = [liquidatingWallet: AddressLike];
  export type OutputTuple = [liquidatingWallet: string];
  export interface OutputObject {
    liquidatingWallet: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface WalletInMaintenanceLiquidation extends BaseContract {
  connect(runner?: ContractRunner | null): WalletInMaintenanceLiquidation;
  waitForDeployment(): Promise<this>;

  interface: WalletInMaintenanceLiquidationInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent,
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent,
  ): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment,
  ): T;

  getEvent(
    key: 'LiquidatedWalletInMaintenance',
  ): TypedContractEvent<
    LiquidatedWalletInMaintenanceEvent.InputTuple,
    LiquidatedWalletInMaintenanceEvent.OutputTuple,
    LiquidatedWalletInMaintenanceEvent.OutputObject
  >;
  getEvent(
    key: 'LiquidatedWalletInMaintenanceDuringSystemRecovery',
  ): TypedContractEvent<
    LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.InputTuple,
    LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.OutputTuple,
    LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.OutputObject
  >;

  filters: {
    'LiquidatedWalletInMaintenance(address)': TypedContractEvent<
      LiquidatedWalletInMaintenanceEvent.InputTuple,
      LiquidatedWalletInMaintenanceEvent.OutputTuple,
      LiquidatedWalletInMaintenanceEvent.OutputObject
    >;
    LiquidatedWalletInMaintenance: TypedContractEvent<
      LiquidatedWalletInMaintenanceEvent.InputTuple,
      LiquidatedWalletInMaintenanceEvent.OutputTuple,
      LiquidatedWalletInMaintenanceEvent.OutputObject
    >;

    'LiquidatedWalletInMaintenanceDuringSystemRecovery(address)': TypedContractEvent<
      LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.InputTuple,
      LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.OutputTuple,
      LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.OutputObject
    >;
    LiquidatedWalletInMaintenanceDuringSystemRecovery: TypedContractEvent<
      LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.InputTuple,
      LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.OutputTuple,
      LiquidatedWalletInMaintenanceDuringSystemRecoveryEvent.OutputObject
    >;
  };
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../common';
import type {
  KumaOFTAdapterUSDC,
  KumaOFTAdapterUSDCInterface,
} from '../../contracts/KumaOFTAdapterUSDC';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_lzEndpoint',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidDelegate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidEndpointCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidLocalDecimals',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'options',
        type: 'bytes',
      },
    ],
    name: 'InvalidOptions',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LzTokenUnavailable',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
    ],
    name: 'NoPeer',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'msgValue',
        type: 'uint256',
      },
    ],
    name: 'NotEnoughNative',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'OnlyEndpoint',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'sender',
        type: 'bytes32',
      },
    ],
    name: 'OnlyPeer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlySelf',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'result',
        type: 'bytes',
      },
    ],
    name: 'SimulationResult',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountLD',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minAmountLD',
        type: 'uint256',
      },
    ],
    name: 'SlippageExceeded',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'eid',
            type: 'uint32',
          },
          {
            internalType: 'uint16',
            name: 'msgType',
            type: 'uint16',
          },
          {
            internalType: 'bytes',
            name: 'options',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct EnforcedOptionParam[]',
        name: '_enforcedOptions',
        type: 'tuple[]',
      },
    ],
    name: 'EnforcedOptionSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'inspector',
        type: 'address',
      },
    ],
    name: 'MsgInspectorSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'guid',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'srcEid',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'toAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountReceivedLD',
        type: 'uint256',
      },
    ],
    name: 'OFTReceived',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'guid',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'dstEid',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'fromAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountSentLD',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountReceivedLD',
        type: 'uint256',
      },
    ],
    name: 'OFTSent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'peer',
        type: 'bytes32',
      },
    ],
    name: 'PeerSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'preCrimeAddress',
        type: 'address',
      },
    ],
    name: 'PreCrimeSet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'SEND',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SEND_AND_CALL',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'srcEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'sender',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
        ],
        internalType: 'struct Origin',
        name: 'origin',
        type: 'tuple',
      },
    ],
    name: 'allowInitializePath',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'approvalRequired',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_eid',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: '_msgType',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_extraOptions',
        type: 'bytes',
      },
    ],
    name: 'combineOptions',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimalConversionRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'endpoint',
    outputs: [
      {
        internalType: 'contract ILayerZeroEndpointV2',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'msgType',
        type: 'uint16',
      },
    ],
    name: 'enforcedOptions',
    outputs: [
      {
        internalType: 'bytes',
        name: 'enforcedOption',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'srcEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'sender',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
        ],
        internalType: 'struct Origin',
        name: '',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
    ],
    name: 'isComposeMsgSender',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_eid',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_peer',
        type: 'bytes32',
      },
    ],
    name: 'isPeer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'srcEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'sender',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
        ],
        internalType: 'struct Origin',
        name: '_origin',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: '_guid',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'lzReceive',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint32',
                name: 'srcEid',
                type: 'uint32',
              },
              {
                internalType: 'bytes32',
                name: 'sender',
                type: 'bytes32',
              },
              {
                internalType: 'uint64',
                name: 'nonce',
                type: 'uint64',
              },
            ],
            internalType: 'struct Origin',
            name: 'origin',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'address',
            name: 'receiver',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'guid',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'executor',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'message',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'extraData',
            type: 'bytes',
          },
        ],
        internalType: 'struct InboundPacket[]',
        name: '_packets',
        type: 'tuple[]',
      },
    ],
    name: 'lzReceiveAndRevert',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'srcEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'sender',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
        ],
        internalType: 'struct Origin',
        name: '_origin',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: '_guid',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'lzReceiveSimulate',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'msgInspector',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'nextNonce',
    outputs: [
      {
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oApp',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oAppVersion',
    outputs: [
      {
        internalType: 'uint64',
        name: 'senderVersion',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'receiverVersion',
        type: 'uint64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oftVersion',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
      {
        internalType: 'uint64',
        name: 'version',
        type: 'uint64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
    ],
    name: 'peers',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'peer',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'preCrime',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'to',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'extraOptions',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'composeMsg',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'oftCmd',
            type: 'bytes',
          },
        ],
        internalType: 'struct SendParam',
        name: '_sendParam',
        type: 'tuple',
      },
    ],
    name: 'quoteOFT',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmountLD',
            type: 'uint256',
          },
        ],
        internalType: 'struct OFTLimit',
        name: 'oftLimit',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'feeAmountLD',
            type: 'int256',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct OFTFeeDetail[]',
        name: 'oftFeeDetails',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amountSentLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountReceivedLD',
            type: 'uint256',
          },
        ],
        internalType: 'struct OFTReceipt',
        name: 'oftReceipt',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'to',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'extraOptions',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'composeMsg',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'oftCmd',
            type: 'bytes',
          },
        ],
        internalType: 'struct SendParam',
        name: '_sendParam',
        type: 'tuple',
      },
      {
        internalType: 'bool',
        name: '_payInLzToken',
        type: 'bool',
      },
    ],
    name: 'quoteSend',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nativeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lzTokenFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct MessagingFee',
        name: 'msgFee',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'to',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'extraOptions',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'composeMsg',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'oftCmd',
            type: 'bytes',
          },
        ],
        internalType: 'struct SendParam',
        name: '_sendParam',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nativeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lzTokenFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct MessagingFee',
        name: '_fee',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_refundAddress',
        type: 'address',
      },
    ],
    name: 'send',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'guid',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'nativeFee',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lzTokenFee',
                type: 'uint256',
              },
            ],
            internalType: 'struct MessagingFee',
            name: 'fee',
            type: 'tuple',
          },
        ],
        internalType: 'struct MessagingReceipt',
        name: 'msgReceipt',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amountSentLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountReceivedLD',
            type: 'uint256',
          },
        ],
        internalType: 'struct OFTReceipt',
        name: 'oftReceipt',
        type: 'tuple',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_delegate',
        type: 'address',
      },
    ],
    name: 'setDelegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'eid',
            type: 'uint32',
          },
          {
            internalType: 'uint16',
            name: 'msgType',
            type: 'uint16',
          },
          {
            internalType: 'bytes',
            name: 'options',
            type: 'bytes',
          },
        ],
        internalType: 'struct EnforcedOptionParam[]',
        name: '_enforcedOptions',
        type: 'tuple[]',
      },
    ],
    name: 'setEnforcedOptions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_msgInspector',
        type: 'address',
      },
    ],
    name: 'setMsgInspector',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_eid',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_peer',
        type: 'bytes32',
      },
    ],
    name: 'setPeer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_preCrime',
        type: 'address',
      },
    ],
    name: 'setPreCrime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sharedDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60e0604090808252346102845760006060826133ed80380380916100238285610289565b83398101031261028157610036826102c2565b61004d84610046602086016102c2565b94016102c2565b845163313ce56760e01b81526001600160a01b03928316946004949193919290919060208587818a5afa948515610277578495610235575b50811691821561021e5783546001600160a01b0319811684178555839083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a3169081608052813b1561021a578291602483928951948593849263ca5eb5e160e01b84528a8401525af18015610210576101e6575b509060ff16600681106101d6576005190160ff81116101c35760ff1691604d83116101b0575050600a0a60a05260c0525161311690816102d782396080518181816106a601528181610c1b0152818161106e01528181611a3e01528181611b7e01528181612e6d0152612f96015260a051818181610b3701528181611372015281816118a50152818161235a015281816124f40152612b4c015260c0518181816118e701528181611e5f0152612be20152f35b634e487b7160e01b825260119052602490fd5b506011602492634e487b7160e01b835252fd5b84516301e9714b60e41b81528390fd5b6001600160401b0381116101fd57855260ff6100fd565b634e487b7160e01b825260418452602482fd5b86513d84823e3d90fd5b8280fd5b8751631e4fbdf760e01b8152808701859052602490fd5b9094506020813d60201161026f575b8161025160209383610289565b8101031261026b575160ff8116810361026b579381610085565b8380fd5b3d9150610244565b88513d86823e3d90fd5b80fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176102ac57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036102845756fe6080604052600436101561001257600080fd5b60003560e01c80630d35b41514610222578063111ecdad1461021d57806313137d6514610218578063134d4f2514610213578063156a0d0f1461020e57806317442b70146102095780631f5e1334146101c35780633400288b146102045780633b6f743b146101ff57806352ae2879146101fa5780635535d461146101f55780635a0dfe4d146101f05780635e280f11146101eb5780636fc1b31e146101e6578063715018a6146101e15780637d25a05e146101dc57806382413eac146101d7578063857749b0146101d25780638da5cb5b146101cd578063963efcaa146101c85780639f68b964146101c3578063b731ea0a146101be578063b98bd070146101b9578063bb0b6a53146101b4578063bc70b354146101af578063bd815db0146101aa578063c7c7f5b3146101a5578063ca5eb5e1146101a0578063d045a0dc1461019b578063d424388514610196578063f2fde38b14610191578063fc0c546a1461018c5763ff7bd03d1461018757600080fd5b611e83565b611e14565b611d2e565b611c7f565b611abb565b6119e0565b6117ec565b6115fc565b611589565b611530565b611452565b611395565b6109c4565b61133c565b6112ea565b6112b0565b611226565b6111e1565b611141565b611092565b611023565b610fbd565b610f31565b610cd2565b610abb565b610a0c565b610984565b610925565b6108eb565b61067e565b61052c565b610369565b908160e09103126102355790565b600080fd5b60005b83811061024d5750506000910152565b818101518382015260200161023d565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936102998151809281875287808801910161023a565b0116010190565b9392916102bb8560a081019360208091805184520151910152565b60409160a06040870152815180915260c086019160c08260051b880101936020809201936000915b8985841061030d575050505050505090606061030b9294019060208091805184520151910152565b565b9380610359897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff40600195969798849a9b9c0301875285838c51805184520151918185820152019061025d565b98019301930191949392906102e3565b34610235576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102355760043567ffffffffffffffff8111610235576103b9903690600401610227565b906103c2611f01565b506103cb611f01565b50604051907ffc0c546a0000000000000000000000000000000000000000000000000000000082528082600481305afa9182156104ef5773ffffffffffffffffffffffffffffffffffffffff9282916000916104f4575b506004604051809581937f18160ddd000000000000000000000000000000000000000000000000000000008352165afa9182156104ef576000926104bc575b506104b89061046e611ee7565b92600084528184015261049c610482611f62565b9461048c81611f86565b5060406060820135910135612351565b90916104a6611ee7565b928352820152604051938493846102a0565b0390f35b8192506104e1906104b8923d85116104e8575b6104d98183610e1a565b810190611f3b565b9190610461565b503d6104cf565b611f2f565b6105149150823d841161051a575b61050c8183610e1a565b810190611f1a565b38610422565b503d610502565b600091031261023557565b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557602073ffffffffffffffffffffffffffffffffffffffff60045416604051908152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc606091011261023557600490565b9181601f840112156102355782359167ffffffffffffffff8311610235576020838186019501011161023557565b73ffffffffffffffffffffffffffffffffffffffff81160361023557565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc810160e0811261023557606013610235576004916064359167ffffffffffffffff906084358281116102355781610653916004016105ad565b9390939260a435610663816105db565b9260c4359182116102355761067a916004016105ad565b9091565b610687366105f9565b50505073ffffffffffffffffffffffffffffffffffffffff93919390817f0000000000000000000000000000000000000000000000000000000000000000163381036108bb5783356106d8816109fe565b6106e1816123c4565b90602086013580920361086d5750506107166106fd8388612b1f565b73ffffffffffffffffffffffffffffffffffffffff1690565b9161073c61072c610727838a612b2b565b612b3d565b61073587611f86565b5084612b72565b80976028831161079f575b5050505061079a6107787fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c94611f86565b956040519384931696836020909392919363ffffffff60408201951681520152565b0390a3005b906107ca92916107c46107b460408a01612415565b936107be8a611f86565b92612c06565b92612c40565b90803b15610235576108126000929183926040519485809481937f7cb590120000000000000000000000000000000000000000000000000000000083528c8a6004850161241f565b03925af180156104ef577fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c9461079a9261077892610854575b88919650610747565b8061086161086792610dce565b80610521565b3861084b565b610876816109fe565b6040517fc26bebcc00000000000000000000000000000000000000000000000000000000815263ffffffff9190911660048201526024810191909152604490fd5b0390fd5b60246040517f91ac5e4f000000000000000000000000000000000000000000000000000000008152336004820152fd5b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557602060405160028152f35b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557604080517f02e49c2c00000000000000000000000000000000000000000000000000000000815260016020820152f35b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557604080516001815260026020820152f35b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557602060405160018152f35b63ffffffff81160361023557565b346102355760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610235577f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b600435610a68816109fe565b60243590610a74612458565b63ffffffff8116600052600160205281604060002055610aac604051928392836020909392919363ffffffff60408201951681520152565b0390a1005b8015150361023557565b34610235576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102355760043567ffffffffffffffff811161023557610b0b903690600401610227565b90602435610b1881610ab1565b610b20611f01565b506060830135833593610b32856109fe565b610b687f0000000000000000000000000000000000000000000000000000000000000000610b638187850135612aa4565b612add565b91808310610c9c57508392610b84610c029693610bce936124e3565b90610b8e856109fe565b610b96611f01565b50610ba0856123c4565b610bb7610bab611ef4565b63ffffffff9097168752565b602086015285850152606084015215156080830152565b8151809481927fddc28c5800000000000000000000000000000000000000000000000000000000835230906004840161266d565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa9081156104ef576104b892600092610c6d575b505191829182815181526020918201519181019190915260400190565b81610c8e9293503d8411610c95575b610c868183610e1a565b810190612659565b9038610c50565b503d610c7c565b826044918651917f71c4efed00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610235576020604051308152f35b6024359061ffff8216820361023557565b359061ffff8216820361023557565b90600182811c92168015610d74575b6020831014610d4557565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610d3a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610dc957604052565b610d7e565b67ffffffffffffffff8111610dc957604052565b6040810190811067ffffffffffffffff821117610dc957604052565b60a0810190811067ffffffffffffffff821117610dc957604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610dc957604052565b90604051918260008254610e6e81610d2b565b90818452602094600191600181169081600014610edc5750600114610e9d575b50505061030b92500383610e1a565b600090815285812095935091905b818310610ec457505061030b9350820101388080610e8e565b85548884018501529485019487945091830191610eab565b91505061030b9593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b820101388080610e8e565b906020610f2e92818152019061025d565b90565b346102355760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610235576104b8610fa9610fa4600435610f75816109fe565b63ffffffff610f82610d0b565b9116600052600360205260406000209061ffff16600052602052604060002090565b610e5b565b60405191829160208352602083019061025d565b346102355760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610235576020611019600435610ffd816109fe565b6024359063ffffffff1660005260016020526040600020541490565b6040519015158152f35b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102355760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610235577ff0be4f1e87349231d80c36b33f9e8639658eeaf474014dee15a3e6a4d4414197602073ffffffffffffffffffffffffffffffffffffffff600435611105816105db565b61110d612458565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006004541617600455604051908152a1005b34610235576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126111de57611179612458565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346102355760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102355761121b6004356109fe565b602060405160008152f35b346102355760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102355761125e3661057e565b5060643567ffffffffffffffff81116102355761127f9036906004016105ad565b5050602060843561128f816105db565b6040519073ffffffffffffffffffffffffffffffffffffffff309116148152f35b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557602060405160068152f35b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102355760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b9060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126102355760043567ffffffffffffffff9283821161023557806023830112156102355781600401359384116102355760248460051b83010111610235576024019190565b3461023557611460366113e7565b90611469612458565b61147282611f4a565b9060406114826040519384610e1a565b8383526020938484019060051b8301923684116102355780915b8483106114ae576114ac86612947565b005b67ffffffffffffffff90833582811161023557830191606083360312610235578551926114da84610dad565b80356114e5816109fe565b84526114f28a8201610d1c565b8a8501528681013591821161023557019036601f83011215610235578892611521849336908581359101611fca565b8782015281520192019161149c565b346102355760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102355763ffffffff600435611570816109fe565b1660005260016020526020604060002054604051908152f35b346102355760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610235576004356115c4816109fe565b6115cc610d0b565b6044359067ffffffffffffffff8211610235576104b8926115f4610fa99336906004016105ad565b92909161208d565b611605366113e7565b60005b8181106116a6576040517f8e9e7099000000000000000000000000000000000000000000000000000000008152600081600481335afa80156104ef576108b791600091611683575b506040519182917f8351eea700000000000000000000000000000000000000000000000000000000835260048301610f1d565b6116a091503d806000833e6116988183610e1a565b8101906122ca565b82611650565b6116b1818385612193565b906116e36116df6116c184611f86565b60208501359063ffffffff1660005260016020526040600020541490565b1590565b611791576116f56101008301836121d8565b9261170260e08201612229565b906117116101208201826121d8565b959095303b156102355760009461176060c092604051998a97889687957fd045a0dc00000000000000000000000000000000000000000000000000000000875260a08a01358a60048901612245565b03920135305af19182156104ef5760019261177e575b505b01611608565b8061086161178b92610dce565b38611776565b60019150611778565b91608061030b9294936117db604060c08301978051845267ffffffffffffffff60208201511660208501520151604083019060208091805184520151910152565b019060208091805184520151910152565b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102355760043567ffffffffffffffff811161023557611836903690600401610227565b60407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601126102355760643561186c816105db565b611874612329565b5061187d611f01565b50611886612329565b5061188f611f01565b506060820135906118a083356109fe565b6118d27f0000000000000000000000000000000000000000000000000000000000000000610b63816040870135612aa4565b918083106119a9575061192e9061190b8330337f0000000000000000000000000000000000000000000000000000000000000000612ed9565b61191583856124e3565b61191e86611f86565b9161192836612a5e565b92612dc2565b90611937611ee7565b928184528160208501527f85496b760a4b7f8d66384b9df21b381f5d1b1e79f229a47aaf4c232edc2fe59a611997611970855193611f86565b936040519181839233978460409194939263ffffffff606083019616825260208201520152565b0390a36104b86040519283928361179a565b82604491604051917f71c4efed00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b3461023557600060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126111de57600435611a1d816105db565b611a25612458565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b15611ab7576024908360405195869485937fca5eb5e10000000000000000000000000000000000000000000000000000000085521660048401525af180156104ef57611aab575080f35b611ab490610dce565b80f35b8280fd5b611ac4366105f9565b5050509092303303611c5557611add6106fd8386612b1f565b91611af7611aee6107278388612b2b565b61073584611f86565b809560288311611b47575b50847fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c73ffffffffffffffffffffffffffffffffffffffff8661079a61077888611f86565b90611b6692916107c4611b5c60408701612415565b936107be87611f86565b9173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b1561023557611be56000949185926040519687809481937f7cb590120000000000000000000000000000000000000000000000000000000083528b896004850161241f565b03925af19283156104ef5761077873ffffffffffffffffffffffffffffffffffffffff9361079a927fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c96611c42575b509350829450869150611b02565b80610861611c4f92610dce565b38611c34565b60046040517f14d4a4e8000000000000000000000000000000000000000000000000000000008152fd5b346102355760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610235577fd48d879cef83a1c0bdda516f27b13ddb1b3f8bbac1c9e1511bb2a659c2427760602073ffffffffffffffffffffffffffffffffffffffff600435611cf2816105db565b611cfa612458565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255604051908152a1005b346102355760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557600435611d69816105db565b611d71612458565b73ffffffffffffffffffffffffffffffffffffffff8091168015611de3576000918254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b346102355760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102355760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610235576020611ebd3661057e565b63ffffffff8135611ecd816109fe565b166000526001825260406000205482604051920135148152f35b6040519061030b82610de2565b6040519061030b82610dfe565b60405190611f0e82610de2565b60006020838281520152565b908160209103126102355751610f2e816105db565b6040513d6000823e3d90fd5b90816020910312610235575190565b67ffffffffffffffff8111610dc95760051b60200190565b6040516020810181811067ffffffffffffffff821117610dc9576040526000815290565b35610f2e816109fe565b67ffffffffffffffff8111610dc957601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192611fd682611f90565b91611fe46040519384610e1a565b829481845281830111610235578281602093846000960137010152565b6020908361030b939594956040519683612024899551809288808901910161023a565b8401918583013701600083820152038085520183610e1a565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b916020610f2e93818152019161203d565b6120bb9163ffffffff610fa49216600052600360205260406000209061ffff16600052602052604060002090565b80511561215857821561215257600283101561210757506108b76040519283927f9a6d49cd0000000000000000000000000000000000000000000000000000000084526004840161207c565b61211a612115368585611fca565b612a0d565b826002116102355760027ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe610f2e9401920190612001565b91505090565b50610f2e913691611fca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156121d35760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec181360301821215610235570190565b612164565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610235570180359067ffffffffffffffff82116102355760200191813603831361023557565b35610f2e816105db565b67ffffffffffffffff81160361023557565b92610f2e9795969473ffffffffffffffffffffffffffffffffffffffff9367ffffffffffffffff60406122b69563ffffffff8135612282816109fe565b168952602081013560208a0152013561229a81612233565b166040870152606086015260e0608086015260e085019161203d565b941660a082015260c081850391015261203d565b6020818303126102355780519067ffffffffffffffff8211610235570181601f820112156102355780516122fd81611f90565b9261230b6040519485610e1a565b8184526020828401011161023557610f2e916020808501910161023a565b6040519061233682610dad565b816000815260006020820152604061234c611f01565b910152565b61238090610b637f00000000000000000000000000000000000000000000000000000000000000008092612aa4565b91829180841061238d5750565b83604491604051917f71c4efed00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b63ffffffff168060005260016020526040600020549081156123e4575090565b602490604051907ff6ff4fb70000000000000000000000000000000000000000000000000000000082526004820152fd5b35610f2e81612233565b610f2e939273ffffffffffffffffffffffffffffffffffffffff608093168252602082015260006040820152816060820152019061025d565b73ffffffffffffffffffffffffffffffffffffffff60005416330361247957565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b908160209103126102355751610f2e81610ab1565b90916124d5610f2e9360408452604084019061025d565b91602081840391015261025d565b909161254861252661251961256f957f000000000000000000000000000000000000000000000000000000000000000090612aa4565b67ffffffffffffffff1690565b61253d61253660a08601866121d8565b3691611fca565b906020850135612cca565b9390928394600014612629576002905b6115f461256482611f86565b9160808101906121d8565b9173ffffffffffffffffffffffffffffffffffffffff6125a460045473ffffffffffffffffffffffffffffffffffffffff1690565b169083826125b157505050565b6125ed926020926040518095819482937f043a78eb000000000000000000000000000000000000000000000000000000008452600484016124be565b03915afa80156104ef576125fe5750565b61261f9060203d602011612622575b6126178183610e1a565b8101906124a9565b50565b503d61260d565b600190612558565b91908260409103126102355760405161264981610de2565b6020808294805184520151910152565b9060408282031261023557610f2e91612631565b9073ffffffffffffffffffffffffffffffffffffffff6020919493946040845263ffffffff815116604085015282810151606085015260806126f46126c0604084015160a08489015260e088019061025d565b60608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08883030160a089015261025d565b910151151560c08501529416910152565b80518210156121d35760209160051b010190565b90601f811161272757505050565b6000916000526020600020906020601f850160051c83019410612765575b601f0160051c01915b82811061275a57505050565b81815560010161274e565b9092508290612745565b919091825167ffffffffffffffff8111610dc957612797816127918454610d2b565b84612719565b602080601f83116001146127f7575081906127e89394956000926127ec575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b9055565b0151905038806127b6565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083169561282b85600052602060002090565b926000905b8882106128865750508360019596971061284f575b505050811b019055565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388080612845565b80600185968294968601518155019501930190612830565b6020808201908083528351809252604092604081018260408560051b8401019601946000925b8584106128d5575050505050505090565b909192939495968580612936837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030188528b518760609163ffffffff815116845261ffff8682015116868501520151918189820152019061025d565b9901940194019295949391906128c4565b9060009160005b81518110156129d3576001906129cd60406129758161296d8588612705565b510151612a0d565b6129c8816129838588612705565b5101519163ffffffff6129968689612705565b515116895261ffff602091600383528a20916129b2878a612705565b5101511661ffff16600052602052604060002090565b61276f565b0161294e565b507fbe4864a8e820971c0247f5992e2da559595f7bf076a21cb5928d443d2a13b674919250612a08906040519182918261289e565b0390a1565b600361ffff60028301511603612a205750565b6108b7906040519182917f9a6d49cd00000000000000000000000000000000000000000000000000000000835260206004840152602483019061025d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60409101126102355760405190612a9582610de2565b60243582526044356020830152565b8115612aae570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b81810292918115918404141715612af057565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b90602011610235573590565b90602811610235576020013560c01c90565b610f2e9067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000009116612add565b73ffffffffffffffffffffffffffffffffffffffff604051917fa9059cbb00000000000000000000000000000000000000000000000000000000602084015216602482015281604482015260448152608081019080821067ffffffffffffffff831117610dc957610f2e916040527f0000000000000000000000000000000000000000000000000000000000000000613052565b908060281161023557610f2e9160287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd83693019101611fca565b7fffffffffffffffff00000000000000000000000000000000000000000000000093610f2e937fffffffff00000000000000000000000000000000000000000000000000000000604c9460405197889560c01b16602086015260e01b166028840152602c830152612cba815180926020868601910161023a565b810103602c810184520182610e1a565b82511580159390612d3d57612d3a916068917fffffffffffffffff000000000000000000000000000000000000000000000000604051958693602085015260c01b166040830152336048830152612d2a815180926020868601910161023a565b8101036048810184520182610e1a565b91565b50907fffffffffffffffff0000000000000000000000000000000000000000000000009060405192602084015260c01b16604082015260288152612d3a81610dad565b9060808282031261023557612dba906040805193612d9d85610dad565b805185526020810151612daf81612233565b602086015201612631565b604082015290565b612e1f60809492612e549694612dd6612329565b506020612de38651612f43565b950191825180612eca575b50612df8856123c4565b9251151592612e08610bab611ef4565b602086015260408501526060840152151585830152565b6040518095819482937f2637a4500000000000000000000000000000000000000000000000000000000084526004840161266d565b039173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af19081156104ef57600091612ea1575090565b610f2e915060803d608011612ec3575b612ebb8183610e1a565b810190612d80565b503d612eb1565b612ed390612f7d565b38612dee565b909261030b93604051937f23b872dd00000000000000000000000000000000000000000000000000000000602086015273ffffffffffffffffffffffffffffffffffffffff8092166024860152166044840152606483015260648252612f3e82610dfe565b613052565b803403612f4d5790565b60246040517f9f704120000000000000000000000000000000000000000000000000000000008152346004820152fd5b73ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016916040517fe4fe1d94000000000000000000000000000000000000000000000000000000008152602081600481875afa9081156104ef57600091613033575b50169182156130095761030b923390612ed9565b60046040517f5373352a000000000000000000000000000000000000000000000000000000008152fd5b61304c915060203d60201161051a5761050c8183610e1a565b38612ff5565b906000602091828151910182855af115611f2f576000513d6130d7575073ffffffffffffffffffffffffffffffffffffffff81163b155b6130905750565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f5274afe7000000000000000000000000000000000000000000000000000000008352166004820152fd5b6001141561308956fea264697066735822122074616e937a696b8f2b3083f411719f7023976e54837b147ae59dc49d0b17078b64736f6c63430008190033';

type KumaOFTAdapterUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KumaOFTAdapterUSDCConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KumaOFTAdapterUSDC__factory extends ContractFactory {
  constructor(...args: KumaOFTAdapterUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _lzEndpoint: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _token,
      _lzEndpoint,
      _owner,
      overrides || {},
    );
  }
  override deploy(
    _token: AddressLike,
    _lzEndpoint: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(
      _token,
      _lzEndpoint,
      _owner,
      overrides || {},
    ) as Promise<
      KumaOFTAdapterUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KumaOFTAdapterUSDC__factory {
    return super.connect(runner) as KumaOFTAdapterUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KumaOFTAdapterUSDCInterface {
    return new Interface(_abi) as KumaOFTAdapterUSDCInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): KumaOFTAdapterUSDC {
    return new Contract(address, _abi, runner) as unknown as KumaOFTAdapterUSDC;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  IBerachainRewardsVault,
  IBerachainRewardsVaultInterface,
} from '../../../contracts/KumaRewardToken.sol/IBerachainRewardsVault';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'delegateStake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'delegateWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
    ],
    name: 'getDelegateStake',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IBerachainRewardsVault__factory {
  static readonly abi = _abi;
  static createInterface(): IBerachainRewardsVaultInterface {
    return new Interface(_abi) as IBerachainRewardsVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): IBerachainRewardsVault {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as IBerachainRewardsVault;
  }
}

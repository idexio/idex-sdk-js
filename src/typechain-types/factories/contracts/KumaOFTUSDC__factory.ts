/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../common';
import type {
  KumaOFTUSDC,
  KumaOFTUSDCInterface,
} from '../../contracts/KumaOFTUSDC';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_lzEndpoint',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_delegate',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'allowance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'needed',
        type: 'uint256',
      },
    ],
    name: 'ERC20InsufficientAllowance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'needed',
        type: 'uint256',
      },
    ],
    name: 'ERC20InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'approver',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidApprover',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidReceiver',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidSender',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidSpender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidDelegate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidEndpointCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidLocalDecimals',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'options',
        type: 'bytes',
      },
    ],
    name: 'InvalidOptions',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LzTokenUnavailable',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
    ],
    name: 'NoPeer',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'msgValue',
        type: 'uint256',
      },
    ],
    name: 'NotEnoughNative',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'OnlyEndpoint',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'sender',
        type: 'bytes32',
      },
    ],
    name: 'OnlyPeer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlySelf',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'result',
        type: 'bytes',
      },
    ],
    name: 'SimulationResult',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountLD',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minAmountLD',
        type: 'uint256',
      },
    ],
    name: 'SlippageExceeded',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'eid',
            type: 'uint32',
          },
          {
            internalType: 'uint16',
            name: 'msgType',
            type: 'uint16',
          },
          {
            internalType: 'bytes',
            name: 'options',
            type: 'bytes',
          },
        ],
        indexed: false,
        internalType: 'struct EnforcedOptionParam[]',
        name: '_enforcedOptions',
        type: 'tuple[]',
      },
    ],
    name: 'EnforcedOptionSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'inspector',
        type: 'address',
      },
    ],
    name: 'MsgInspectorSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'guid',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'srcEid',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'toAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountReceivedLD',
        type: 'uint256',
      },
    ],
    name: 'OFTReceived',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'guid',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'dstEid',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'fromAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountSentLD',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountReceivedLD',
        type: 'uint256',
      },
    ],
    name: 'OFTSent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'peer',
        type: 'bytes32',
      },
    ],
    name: 'PeerSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'preCrimeAddress',
        type: 'address',
      },
    ],
    name: 'PreCrimeSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'SEND',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SEND_AND_CALL',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'srcEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'sender',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
        ],
        internalType: 'struct Origin',
        name: 'origin',
        type: 'tuple',
      },
    ],
    name: 'allowInitializePath',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'approvalRequired',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_eid',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: '_msgType',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_extraOptions',
        type: 'bytes',
      },
    ],
    name: 'combineOptions',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimalConversionRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'endpoint',
    outputs: [
      {
        internalType: 'contract ILayerZeroEndpointV2',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'msgType',
        type: 'uint16',
      },
    ],
    name: 'enforcedOptions',
    outputs: [
      {
        internalType: 'bytes',
        name: 'enforcedOption',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'srcEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'sender',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
        ],
        internalType: 'struct Origin',
        name: '',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
    ],
    name: 'isComposeMsgSender',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_eid',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_peer',
        type: 'bytes32',
      },
    ],
    name: 'isPeer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'srcEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'sender',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
        ],
        internalType: 'struct Origin',
        name: '_origin',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: '_guid',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'lzReceive',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint32',
                name: 'srcEid',
                type: 'uint32',
              },
              {
                internalType: 'bytes32',
                name: 'sender',
                type: 'bytes32',
              },
              {
                internalType: 'uint64',
                name: 'nonce',
                type: 'uint64',
              },
            ],
            internalType: 'struct Origin',
            name: 'origin',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'address',
            name: 'receiver',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'guid',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'executor',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'message',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'extraData',
            type: 'bytes',
          },
        ],
        internalType: 'struct InboundPacket[]',
        name: '_packets',
        type: 'tuple[]',
      },
    ],
    name: 'lzReceiveAndRevert',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'srcEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'sender',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
        ],
        internalType: 'struct Origin',
        name: '_origin',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: '_guid',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'lzReceiveSimulate',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'msgInspector',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'nextNonce',
    outputs: [
      {
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oApp',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oAppVersion',
    outputs: [
      {
        internalType: 'uint64',
        name: 'senderVersion',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'receiverVersion',
        type: 'uint64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oftVersion',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
      {
        internalType: 'uint64',
        name: 'version',
        type: 'uint64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
    ],
    name: 'peers',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'peer',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'preCrime',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'to',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'extraOptions',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'composeMsg',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'oftCmd',
            type: 'bytes',
          },
        ],
        internalType: 'struct SendParam',
        name: '_sendParam',
        type: 'tuple',
      },
    ],
    name: 'quoteOFT',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmountLD',
            type: 'uint256',
          },
        ],
        internalType: 'struct OFTLimit',
        name: 'oftLimit',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'feeAmountLD',
            type: 'int256',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct OFTFeeDetail[]',
        name: 'oftFeeDetails',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amountSentLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountReceivedLD',
            type: 'uint256',
          },
        ],
        internalType: 'struct OFTReceipt',
        name: 'oftReceipt',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'to',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'extraOptions',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'composeMsg',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'oftCmd',
            type: 'bytes',
          },
        ],
        internalType: 'struct SendParam',
        name: '_sendParam',
        type: 'tuple',
      },
      {
        internalType: 'bool',
        name: '_payInLzToken',
        type: 'bool',
      },
    ],
    name: 'quoteSend',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nativeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lzTokenFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct MessagingFee',
        name: 'msgFee',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'to',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'extraOptions',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'composeMsg',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'oftCmd',
            type: 'bytes',
          },
        ],
        internalType: 'struct SendParam',
        name: '_sendParam',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nativeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lzTokenFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct MessagingFee',
        name: '_fee',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_refundAddress',
        type: 'address',
      },
    ],
    name: 'send',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'guid',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'nativeFee',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lzTokenFee',
                type: 'uint256',
              },
            ],
            internalType: 'struct MessagingFee',
            name: 'fee',
            type: 'tuple',
          },
        ],
        internalType: 'struct MessagingReceipt',
        name: 'msgReceipt',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amountSentLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountReceivedLD',
            type: 'uint256',
          },
        ],
        internalType: 'struct OFTReceipt',
        name: 'oftReceipt',
        type: 'tuple',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_delegate',
        type: 'address',
      },
    ],
    name: 'setDelegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'eid',
            type: 'uint32',
          },
          {
            internalType: 'uint16',
            name: 'msgType',
            type: 'uint16',
          },
          {
            internalType: 'bytes',
            name: 'options',
            type: 'bytes',
          },
        ],
        internalType: 'struct EnforcedOptionParam[]',
        name: '_enforcedOptions',
        type: 'tuple[]',
      },
    ],
    name: 'setEnforcedOptions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_msgInspector',
        type: 'address',
      },
    ],
    name: 'setMsgInspector',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_eid',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: '_peer',
        type: 'bytes32',
      },
    ],
    name: 'setPeer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_preCrime',
        type: 'address',
      },
    ],
    name: 'setPreCrime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sharedDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c06040908082523461044257600090613faa80380380916100218285610447565b833981019160808284031261043f5781516001600160401b03929083811161043b578461004f918301610480565b906020948582015185811161041f579061006a918301610480565b9060606100788883016104ef565b916001600160a01b0391829161008e91016104ef565b169182156104235785546001600160a01b0319811684178755839083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08880a31680608052803b1561041f578490818951809263ca5eb5e160e01b825260049586830152816024998a925af18015610415576103f4575b50906001948560a05284518781116103e257600854958787811c971680156103d8575b8a8810146103c6578190601f97888111610377575b508a9088831160011461031557869261030a575b5050600019600383901b1c191690871b176008555b83519687116102f957600954918683811c931680156102ef575b898410146102de57505083811161029a575b508592851160011461023657939450849291908361022b575b50501b916000199060031b1c1916176009555b51613aa6908161050482396080518181816109b6015281816110d40152818161151601528181612077015281816121b70152818161385a0152613918015260a051818181610ff00152818161190c01528181611ece015281816129e401528181612d2a01526133dc0152f35b0151925038806101ac565b6009815285812093958591601f198316915b888383106102805750505010610267575b505050811b016009556101bf565b015160001960f88460031b161c19169055388080610259565b858701518855909601959485019487935090810190610248565b600982528682208480880160051c8201928989106102d5575b0160051c019085905b8281106102ca575050610193565b8381550185906102bc565b925081926102b3565b634e487b7160e01b84526022905282fd5b92607f1692610181565b634e487b7160e01b83526041825282fd5b015190503880610152565b600887528b87208a94509190601f198416888e5b8282106103605750508411610347575b505050811b01600855610167565b015160001960f88460031b161c19169055388080610339565b8385015186558d979095019493840193018e610329565b909150600886528a86208880850160051c8201928d86106103bd575b918b91869594930160051c01915b8281106103af57505061013e565b8881558594508b91016103a1565b92508192610393565b634e487b7160e01b8552602284528285fd5b96607f1696610129565b50634e487b7160e01b83526041825282fd5b86811161040357885238610106565b5060418592634e487b7160e01b835252fd5b89513d84823e3d90fd5b8480fd5b8851631e4fbdf760e01b815260048101879052602490fd5b8280fd5b80fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761046a57604052565b634e487b7160e01b600052604160045260246000fd5b919080601f840112156104425782516001600160401b03811161046a57602090604051926104b783601f19601f8501160185610447565b8184528282870101116104425760005b8181106104dc57508260009394955001015290565b85810183015184820184015282016104c7565b51906001600160a01b03821682036104425756fe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146102ad578063095ea7b3146102a85780630d35b415146102a3578063111ecdad1461029e57806313137d6514610299578063134d4f2514610294578063156a0d0f1461028f57806317442b701461028a57806318160ddd146102855780631f5e13341461028057806323b872dd1461027b578063313ce567146102445780633400288b146102765780633b6f743b1461027157806352ae2879146101ef5780635535d4611461026c5780635a0dfe4d146102675780635e280f11146102625780636fc1b31e1461025d57806370a0823114610258578063715018a6146102535780637d25a05e1461024e57806382413eac14610249578063857749b0146102445780638da5cb5b1461023f57806395d89b411461023a578063963efcaa146102355780639f68b96414610230578063a9059cbb1461022b578063b731ea0a14610226578063b98bd07014610221578063bb0b6a531461021c578063bc70b35414610217578063bd815db014610212578063c7c7f5b31461020d578063ca5eb5e114610208578063d045a0dc14610203578063d4243885146101fe578063dd62ed3e146101f9578063f2fde38b146101f4578063fc0c546a146101ef5763ff7bd03d146101ea57600080fd5b6124ea565b61118b565b612404565b612367565b6122b8565b6120f4565b612019565b611e13565b611c23565b611bb0565b611b57565b611a79565b6119bc565b611969565b61192f565b6118d6565b611810565b6117be565b610e7d565b611734565b6116ef565b611652565b6115e9565b61153a565b6114cb565b611465565b6113c8565b610f74565b610ec5565b610d4a565b610d10565b610cd4565b610c94565b610c35565b610bfb565b61098e565b61085a565b6106a6565b61047f565b61033c565b60009103126102bd57565b600080fd5b60005b8381106102d55750506000910152565b81810151838201526020016102c5565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610321815180928187528780880191016102c2565b0116010190565b9060206103399281815201906102e5565b90565b346102bd576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261045e5760405190806008549061037e826111e4565b8085529160209160019182811690811561041357506001146103bb575b6103b7866103ab81880382611387565b60405191829182610328565b0390f35b9350600884527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b838510610400575050505081016020016103ab826103b73861039b565b80548686018401529382019381016103e3565b8796506103b7979450602093506103ab9592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b82010192933861039b565b80fd5b73ffffffffffffffffffffffffffffffffffffffff8116036102bd57565b346102bd5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd576004356104ba81610461565b602435331561059e5773ffffffffffffffffffffffffffffffffffffffff821691821561056d5761053582916105103373ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b60246040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b908160e09103126102bd5790565b9392916105f88560a081019360208091805184520151910152565b60409160a06040870152815180915260c086019160c08260051b880101936020809201936000915b8985841061064a57505050505050509060606106489294019060208091805184520151910152565b565b9380610696897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff40600195969798849a9b9c0301875285838c5180518452015191818582015201906102e5565b9801930193019194939290610620565b346102bd576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5760043567ffffffffffffffff81116102bd576106f69036906004016105cf565b906106ff612568565b50610708612568565b50604051907ffc0c546a0000000000000000000000000000000000000000000000000000000082528082600481305afa9182156108285773ffffffffffffffffffffffffffffffffffffffff92829160009161082d575b506004604051809581937f18160ddd000000000000000000000000000000000000000000000000000000008352165afa918215610828576000926107f5575b506103b7906107ab61254e565b9260008452818401526107d96107bf6125c9565b946107c9816125ed565b50604060608201359101356129db565b90916107e361254e565b928352820152604051938493846105dd565b81925061081a906103b7923d8511610821575b6108128183611387565b8101906125a2565b919061079e565b503d610808565b612596565b61084d9150823d8411610853575b6108458183611387565b810190612581565b3861075f565b503d61083b565b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57602073ffffffffffffffffffffffffffffffffffffffff60045416604051908152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126102bd57600490565b9181601f840112156102bd5782359167ffffffffffffffff83116102bd57602083818601950101116102bd57565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc810160e081126102bd576060136102bd576004916064359167ffffffffffffffff906084358281116102bd5781610963916004016108db565b9390939260a43561097381610461565b9260c4359182116102bd5761098a916004016108db565b9091565b61099736610909565b50505073ffffffffffffffffffffffffffffffffffffffff93919390817f000000000000000000000000000000000000000000000000000000000000000016338103610bcb5783356109e881610eb7565b6109f181612a4e565b906020860135809203610b7d575050610a26610a0d83886133af565b73ffffffffffffffffffffffffffffffffffffffff1690565b91610a4c610a3c610a37838a6133bb565b6133cd565b610a45876125ed565b5084613402565b809760288311610aaf575b50505050610aaa610a887fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c946125ed565b956040519384931696836020909392919363ffffffff60408201951681520152565b0390a3005b90610ada9291610ad4610ac460408a01612a9f565b93610ace8a6125ed565b926134a3565b926134dd565b90803b156102bd57610b226000929183926040519485809481937f7cb590120000000000000000000000000000000000000000000000000000000083528c8a60048501612aa9565b03925af18015610828577fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c94610aaa92610a8892610b64575b88919650610a57565b80610b71610b779261133b565b806102b2565b38610b5b565b610b8681610eb7565b6040517fc26bebcc00000000000000000000000000000000000000000000000000000000815263ffffffff9190911660048201526024810191909152604490fd5b0390fd5b60246040517f91ac5e4f000000000000000000000000000000000000000000000000000000008152336004820152fd5b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57602060405160028152f35b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57604080517f02e49c2c00000000000000000000000000000000000000000000000000000000815260016020820152f35b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57604080516001815260026020820152f35b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd576020600754604051908152f35b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57602060405160018152f35b346102bd5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57600435610d8581610461565b602435610d9181610461565b6044359073ffffffffffffffffffffffffffffffffffffffff83166000526006602052610de23360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8410610e22575b610e169350612ae2565b60405160018152602090f35b828410610e3e57610e3983610e16950333836132da565b610e0c565b6040517ffb8f41b20000000000000000000000000000000000000000000000000000000081523360048201526024810185905260448101849052606490fd5b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57602060405160068152f35b63ffffffff8116036102bd57565b346102bd5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd577f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b600435610f2181610eb7565b60243590610f2d612c8e565b63ffffffff8116600052600160205281604060002055610f65604051928392836020909392919363ffffffff60408201951681520152565b0390a1005b801515036102bd57565b346102bd576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5760043567ffffffffffffffff81116102bd57610fc49036906004016105cf565b90602435610fd181610f6a565b610fd9612568565b506060830135833593610feb85610eb7565b6110217f000000000000000000000000000000000000000000000000000000000000000061101c818785013561335e565b613397565b918083106111555750839261103d6110bb969361108793612d19565b9061104785610eb7565b61104f612568565b5061105985612a4e565b61107061106461255b565b63ffffffff9097168752565b602086015285850152606084015215156080830152565b8151809481927fddc28c58000000000000000000000000000000000000000000000000000000008352309060048401612ea3565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa908115610828576103b792600092611126575b505191829182815181526020918201519181019190915260400190565b816111479293503d841161114e575b61113f8183611387565b810190612e8f565b9038611109565b503d611135565b826044918651917f71c4efed00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd576020604051308152f35b6024359061ffff821682036102bd57565b359061ffff821682036102bd57565b90600182811c9216801561122d575b60208310146111fe57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916111f3565b805460009392611246826111e4565b918282526020936001916001811690816000146112ae575060011461126d575b5050505050565b90939495506000929192528360002092846000945b83861061129a57505050500101903880808080611266565b805485870183015294019385908201611282565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168685015250505090151560051b010191503880808080611266565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761133657604052565b6112eb565b67ffffffffffffffff811161133657604052565b6040810190811067ffffffffffffffff82111761133657604052565b60a0810190811067ffffffffffffffff82111761133657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761133657604052565b346102bd5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd576103b761144a61145161143e60043561140f81610eb7565b63ffffffff61141c6111c4565b9116600052600360205260406000209061ffff16600052602052604060002090565b60405192838092611237565b0382611387565b6040519182916020835260208301906102e5565b346102bd5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5760206114c16004356114a581610eb7565b6024359063ffffffff1660005260016020526040600020541490565b6040519015158152f35b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102bd5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd577ff0be4f1e87349231d80c36b33f9e8639658eeaf474014dee15a3e6a4d4414197602073ffffffffffffffffffffffffffffffffffffffff6004356115ad81610461565b6115b5612c8e565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006004541617600455604051908152a1005b346102bd5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5773ffffffffffffffffffffffffffffffffffffffff60043561163981610461565b1660005260056020526020604060002054604051908152f35b346102bd576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261045e5761168a612c8e565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b346102bd5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57611729600435610eb7565b602060405160008152f35b346102bd5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5761176c366108ac565b5060643567ffffffffffffffff81116102bd5761178d9036906004016108db565b5050602060843561179d81610461565b6040519073ffffffffffffffffffffffffffffffffffffffff309116148152f35b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346102bd576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261045e57604051908060095490611852826111e4565b80855291602091600191828116908115610413575060011461187e576103b7866103ab81880382611387565b9350600984527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b8385106118c3575050505081016020016103ab826103b73861039b565b80548686018401529382019381016118a6565b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57602060405160008152f35b346102bd5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd576119b16004356119a781610461565b6024359033612ae2565b602060405160018152f35b346102bd5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b9060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126102bd5760043567ffffffffffffffff928382116102bd57806023830112156102bd5781600401359384116102bd5760248460051b830101116102bd576024019190565b346102bd57611a8736611a0e565b90611a90612c8e565b611a99826125b1565b906040611aa96040519384611387565b8383526020938484019060051b8301923684116102bd5780915b848310611ad557611ad38661317d565b005b67ffffffffffffffff9083358281116102bd578301916060833603126102bd57855192611b018461131a565b8035611b0c81610eb7565b8452611b198a82016111d5565b8a850152868101359182116102bd57019036601f830112156102bd578892611b48849336908581359101612631565b87820152815201920191611ac3565b346102bd5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5763ffffffff600435611b9781610eb7565b1660005260016020526020604060002054604051908152f35b346102bd5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd57600435611beb81610eb7565b611bf36111c4565b6044359067ffffffffffffffff82116102bd576103b792611c1b6114519336906004016108db565b92909161272f565b611c2c36611a0e565b60005b818110611ccd576040517f8e9e7099000000000000000000000000000000000000000000000000000000008152600081600481335afa801561082857610bc791600091611caa575b506040519182917f8351eea700000000000000000000000000000000000000000000000000000000835260048301610328565b611cc791503d806000833e611cbf8183611387565b810190612954565b82611c77565b611cd881838561281d565b90611d0a611d06611ce8846125ed565b60208501359063ffffffff1660005260016020526040600020541490565b1590565b611db857611d1c610100830183612862565b92611d2960e082016128b3565b90611d38610120820182612862565b959095303b156102bd57600094611d8760c092604051998a97889687957fd045a0dc00000000000000000000000000000000000000000000000000000000875260a08a01358a600489016128cf565b03920135305af191821561082857600192611da5575b505b01611c2f565b80610b71611db29261133b565b38611d9d565b60019150611d9f565b916080610648929493611e02604060c08301978051845267ffffffffffffffff60208201511660208501520151604083019060208091805184520151910152565b019060208091805184520151910152565b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5760043567ffffffffffffffff81116102bd57611e5d9036906004016105cf565b6040807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601126102bd5760643590611e9582610461565b611e9d6129b3565b50611ea6612568565b50611eaf6129b3565b50611eb8612568565b50606083013591611ec98435610eb7565b611efa7f000000000000000000000000000000000000000000000000000000000000000061101c818588013561335e565b92808410611fe357503315611fb35790611f3e6103b792611f1b8533613567565b611f258587612d19565b611f2e886125ed565b91611f3836613294565b926137af565b92611f4761254e565b948186528160208701527f85496b760a4b7f8d66384b9df21b381f5d1b1e79f229a47aaf4c232edc2fe59a611fa6611f808751936125ed565b9385519181839233978460409194939263ffffffff606083019616825260208201520152565b0390a35192839283611dc1565b602482517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b836044918451917f71c4efed00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b346102bd57600060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261045e5760043561205681610461565b61205e612c8e565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b156120f0576024908360405195869485937fca5eb5e10000000000000000000000000000000000000000000000000000000085521660048401525af18015610828576120e4575080f35b6120ed9061133b565b80f35b8280fd5b6120fd36610909565b505050909230330361228e57612116610a0d83866133af565b91612130612127610a3783886133bb565b610a45846125ed565b809560288311612180575b50847fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c73ffffffffffffffffffffffffffffffffffffffff86610aaa610a88886125ed565b9061219f9291610ad461219560408701612a9f565b93610ace876125ed565b9173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b156102bd5761221e6000949185926040519687809481937f7cb590120000000000000000000000000000000000000000000000000000000083528b8960048501612aa9565b03925af192831561082857610a8873ffffffffffffffffffffffffffffffffffffffff93610aaa927fefed6d3500546b29533b128a29e3a94d70788727f0507505ac12eaf2e578fd9c9661227b575b50935082945086915061213b565b80610b716122889261133b565b3861226d565b60046040517f14d4a4e8000000000000000000000000000000000000000000000000000000008152fd5b346102bd5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd577fd48d879cef83a1c0bdda516f27b13ddb1b3f8bbac1c9e1511bb2a659c2427760602073ffffffffffffffffffffffffffffffffffffffff60043561232b81610461565b612333612c8e565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255604051908152a1005b346102bd5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5760206123fb6004356123a781610461565b73ffffffffffffffffffffffffffffffffffffffff602435916123c983610461565b166000526006835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b346102bd5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd5760043561243f81610461565b612447612c8e565b73ffffffffffffffffffffffffffffffffffffffff80911680156124b9576000918254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b346102bd5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102bd576020612524366108ac565b63ffffffff813561253481610eb7565b166000526001825260406000205482604051920135148152f35b604051906106488261134f565b604051906106488261136b565b604051906125758261134f565b60006020838281520152565b908160209103126102bd575161033981610461565b6040513d6000823e3d90fd5b908160209103126102bd575190565b67ffffffffffffffff81116113365760051b60200190565b6040516020810181811067ffffffffffffffff821117611336576040526000815290565b3561033981610eb7565b67ffffffffffffffff811161133657601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b92919261263d826125f7565b9161264b6040519384611387565b8294818452818301116102bd578281602093846000960137010152565b90929192836002116102bd5783116102bd57600201917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0190565b602090836106489395949560405196836126c689955180928880890191016102c2565b8401918583013701600083820152038085520183611387565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b9160206103399381815201916126df565b61143e61144a9263ffffffff612764939795969716600052600360205260406000209061ffff16600052602052604060002090565b8051156127e05783156127da5760028410156127b1575050610bc76040519283927f9a6d49cd0000000000000000000000000000000000000000000000000000000084526004840161271e565b9092806127d491610339946127cf6127ca368484612631565b613243565b612668565b916126a3565b92509050565b509190610339913691612631565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b919081101561285d5760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec1813603018212156102bd570190565b6127ee565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102bd570180359067ffffffffffffffff82116102bd576020019181360383136102bd57565b3561033981610461565b67ffffffffffffffff8116036102bd57565b926103399795969473ffffffffffffffffffffffffffffffffffffffff9367ffffffffffffffff60406129409563ffffffff813561290c81610eb7565b168952602081013560208a01520135612924816128bd565b166040870152606086015260e0608086015260e08501916126df565b941660a082015260c08185039101526126df565b6020818303126102bd5780519067ffffffffffffffff82116102bd570181601f820112156102bd578051612987816125f7565b926129956040519485611387565b818452602082840101116102bd5761033991602080850191016102c2565b604051906129c08261131a565b81600081526000602082015260406129d6612568565b910152565b612a0a9061101c7f0000000000000000000000000000000000000000000000000000000000000000809261335e565b918291808410612a175750565b83604491604051917f71c4efed00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b63ffffffff16806000526001602052604060002054908115612a6e575090565b602490604051907ff6ff4fb70000000000000000000000000000000000000000000000000000000082526004820152fd5b35610339816128bd565b610339939273ffffffffffffffffffffffffffffffffffffffff60809316825260208201526000604082015281606082015201906102e5565b9173ffffffffffffffffffffffffffffffffffffffff91828416928315612c5d578116938415612c2c57612b368173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b54838110612bd757612bd2928492612b957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef96612bbc94039173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b5573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b8054820190556040519081529081906020820190565b0390a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff929092166004830152602482015260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b73ffffffffffffffffffffffffffffffffffffffff600054163303612caf57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b908160209103126102bd575161033981610f6a565b9091612d0b610339936040845260408401906102e5565b9160208184039101526102e5565b9091612d7e612d5c612d4f612da5957f00000000000000000000000000000000000000000000000000000000000000009061335e565b67ffffffffffffffff1690565b612d73612d6c60a0860186612862565b3691612631565b9060208501356136b7565b9390928394600014612e5f576002905b611c1b612d9a826125ed565b916080810190612862565b9173ffffffffffffffffffffffffffffffffffffffff612dda60045473ffffffffffffffffffffffffffffffffffffffff1690565b16908382612de757505050565b612e23926020926040518095819482937f043a78eb00000000000000000000000000000000000000000000000000000000845260048401612cf4565b03915afa801561082857612e345750565b612e559060203d602011612e58575b612e4d8183611387565b810190612cdf565b50565b503d612e43565b600190612d8e565b91908260409103126102bd57604051612e7f8161134f565b6020808294805184520151910152565b906040828203126102bd5761033991612e67565b9073ffffffffffffffffffffffffffffffffffffffff6020919493946040845263ffffffff81511660408501528281015160608501526080612f2a612ef6604084015160a08489015260e08801906102e5565b60608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08883030160a08901526102e5565b910151151560c08501529416910152565b805182101561285d5760209160051b010190565b90601f8111612f5d57505050565b6000916000526020600020906020601f850160051c83019410612f9b575b601f0160051c01915b828110612f9057505050565b818155600101612f84565b9092508290612f7b565b919091825167ffffffffffffffff811161133657612fcd81612fc784546111e4565b84612f4f565b602080601f831160011461302d5750819061301e939495600092613022575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b9055565b015190503880612fec565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083169561306185600052602060002090565b926000905b8882106130bc57505083600195969710613085575b505050811b019055565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c1916905538808061307b565b80600185968294968601518155019501930190613066565b6020808201908083528351809252604092604081018260408560051b8401019601946000925b85841061310b575050505050505090565b90919293949596858061316c837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030188528b518760609163ffffffff815116845261ffff868201511686850152015191818982015201906102e5565b9901940194019295949391906130fa565b9060009160005b81518110156132095760019061320360406131ab816131a38588612f3b565b510151613243565b6131fe816131b98588612f3b565b5101519163ffffffff6131cc8689612f3b565b515116895261ffff602091600383528a20916131e8878a612f3b565b5101511661ffff16600052602052604060002090565b612fa5565b01613184565b507fbe4864a8e820971c0247f5992e2da559595f7bf076a21cb5928d443d2a13b67491925061323e90604051918291826130d4565b0390a1565b600361ffff600283015116036132565750565b610bc7906040519182917f9a6d49cd0000000000000000000000000000000000000000000000000000000083526020600484015260248301906102e5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc60409101126102bd57604051906132cb8261134f565b60243582526044356020830152565b9073ffffffffffffffffffffffffffffffffffffffff8083161561059e5781161561056d5761051061332c9273ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b55565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8115613368570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b818102929181159184041417156133aa57565b61332f565b906020116102bd573590565b906028116102bd576020013560c01c90565b6103399067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000009116613397565b73ffffffffffffffffffffffffffffffffffffffff80821615613499575b8116908115612c2c57600754908382018092116133aa576134649160075573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b82815401905560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020604051858152a390565b61dead9150613420565b90806028116102bd576103399160287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd83693019101612631565b7fffffffffffffffff00000000000000000000000000000000000000000000000093610339937fffffffff00000000000000000000000000000000000000000000000000000000604c9460405197889560c01b16602086015260e01b166028840152602c83015261355781518092602086860191016102c2565b810103602c810184520182611387565b73ffffffffffffffffffffffffffffffffffffffff811690816135cf5750600754918083018093116133aa5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916000946007555b8060075403600755604051908152a3565b92916135fb8473ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b549381851061365f57816020916136597fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9460009798039173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b556135be565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481018590526044810191909152606490fd5b8251158015939061372a57613727916068917fffffffffffffffff000000000000000000000000000000000000000000000000604051958693602085015260c01b16604083015233604883015261371781518092602086860191016102c2565b8101036048810184520182611387565b91565b50907fffffffffffffffff0000000000000000000000000000000000000000000000009060405192602084015260c01b166040820152602881526137278161131a565b906080828203126102bd576137a790604080519361378a8561131a565b80518552602081015161379c816128bd565b602086015201612e67565b604082015290565b61380c6080949261384196946137c36129b3565b5060206137d086516138c6565b9501918251806138b7575b506137e585612a4e565b92511515926137f561106461255b565b602086015260408501526060840152151585830152565b6040518095819482937f2637a45000000000000000000000000000000000000000000000000000000000845260048401612ea3565b039173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af19081156108285760009161388e575090565b610339915060803d6080116138b0575b6138a88183611387565b81019061376d565b503d61389e565b6138c090613900565b386137db565b8034036138d05790565b60246040517f9f704120000000000000000000000000000000000000000000000000000000008152346004820152fd5b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016906040517fe4fe1d94000000000000000000000000000000000000000000000000000000008152602081600481865afa90811561082857600091613a51575b5016918215613a275760209160009160405190848201927f23b872dd00000000000000000000000000000000000000000000000000000000845233602484015260448301526064820152606481526139ce8161136b565b519082855af115612596576000513d613a1e5750803b155b6139ed5750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b600114156139e6565b60046040517f5373352a000000000000000000000000000000000000000000000000000000008152fd5b613a6a915060203d602011610853576108458183611387565b3861397756fea2646970667358221220d7e41692d35f642bd0f73f6f2c40b5c72677e1b8dae632ab7ad0f44a576fd7e264736f6c63430008190033';

type KumaOFTUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KumaOFTUSDCConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KumaOFTUSDC__factory extends ContractFactory {
  constructor(...args: KumaOFTUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _lzEndpoint: AddressLike,
    _delegate: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _lzEndpoint,
      _delegate,
      overrides || {},
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _lzEndpoint: AddressLike,
    _delegate: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(
      _name,
      _symbol,
      _lzEndpoint,
      _delegate,
      overrides || {},
    ) as Promise<
      KumaOFTUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KumaOFTUSDC__factory {
    return super.connect(runner) as KumaOFTUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KumaOFTUSDCInterface {
    return new Interface(_abi) as KumaOFTUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): KumaOFTUSDC {
    return new Contract(address, _abi, runner) as unknown as KumaOFTUSDC;
  }
}

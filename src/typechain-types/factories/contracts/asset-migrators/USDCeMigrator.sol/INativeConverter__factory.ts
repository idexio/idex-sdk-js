/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  INativeConverter,
  INativeConverterInterface,
} from '../../../../contracts/asset-migrators/USDCeMigrator.sol/INativeConverter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'permitData',
        type: 'bytes',
      },
    ],
    name: 'convert',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'zkBWUSDC',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'zkUSDCe',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class INativeConverter__factory {
  static readonly abi = _abi;
  static createInterface(): INativeConverterInterface {
    return new Interface(_abi) as INativeConverterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): INativeConverter {
    return new Contract(address, _abi, runner) as unknown as INativeConverter;
  }
}

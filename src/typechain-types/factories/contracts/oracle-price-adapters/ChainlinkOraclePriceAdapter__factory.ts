/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  ChainlinkOraclePriceAdapter,
  ChainlinkOraclePriceAdapterInterface,
} from '../../../contracts/oracle-price-adapters/ChainlinkOraclePriceAdapter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string[]',
        name: 'baseAssetSymbols',
        type: 'string[]',
      },
      {
        internalType: 'contract AggregatorV3Interface[]',
        name: 'chainlinkAggregators',
        type: 'address[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseAssetSymbol',
        type: 'string',
      },
      {
        internalType: 'contract AggregatorV3Interface',
        name: 'chainlinkAggregator',
        type: 'address',
      },
    ],
    name: 'addBaseAssetSymbolAndAggregator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'adminWallet',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract AggregatorV3Interface',
        name: '',
        type: 'address',
      },
    ],
    name: 'baseAssetSymbolsByChainlinkAggregator',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    name: 'chainlinkAggregatorsByBaseAssetSymbol',
    outputs: [
      {
        internalType: 'contract AggregatorV3Interface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseAssetSymbol',
        type: 'string',
      },
    ],
    name: 'loadPriceForBaseAssetSymbol',
    outputs: [
      {
        internalType: 'uint64',
        name: 'price',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ownerWallet',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'removeAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'removeOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IExchange',
        name: '',
        type: 'address',
      },
    ],
    name: 'setActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'setAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'setOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234620004a05762001a03803803806200001d8162000537565b9283398101604082820312620004a05781516001600160401b038111620004a05782019181601f84011215620004a0578251620000646200005e826200055d565b62000537565b9360208086848152019260051b82010190848211620004a05760208101925b828410620004a557505050506020810151906001600160401b038211620004a057019080601f83011215620004a057815190620000c46200005e836200055d565b9260208085858152019360051b820101918211620004a057602001915b8183106200047e575050503360018060a01b031960005416176000556001913360018060a01b031984541617835580518251036200043957600091835b62000134575b60405161143d9081620005c68239f35b815160ff8416101562000433576200015060ff8416836200059a565b515115620003ee576001600160a01b036200016f60ff8516836200059a565b51163b156200039d576200018760ff8416836200059a565b516001600160a01b036200019f60ff8616846200059a565b51166000526002602052604060002090805160018060401b03811162000387578254918783811c931680156200037c575b6020841014620003665782601f89941162000319575b50602090601f8311600114620002b057829350600092620002a4575b5050600019600383901b1c191690861b1790555b6001600160a01b036200022d60ff8516836200059a565b51166200025960206200024460ff8716866200059a565b51816040519382858094519384920162000575565b60039082019081520301902080546001600160a01b031916909117905560ff9283169283146200028e5783809301926200011e565b634e487b7160e01b600052601160045260246000fd5b01519050388062000202565b908460005260206000209160005b601f198516811062000300575083601f19811610620002e6575b505050811b01905562000216565b015160001960f88460031b161c19169055388080620002d8565b8183015184558a959093019260209283019201620002be565b846000526020600020601f840160051c810191602085106200035b575b601f0160051c01905b8181106200034e5750620001e6565b600081558994016200033f565b909150819062000336565b634e487b7160e01b600052602260045260246000fd5b92607f1692620001d0565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f496e76616c696420436861696e6c696e6b2061676772656761746f72206164646044820152637265737360e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601960248201527f496e76616c696420626173652061737365742073796d626f6c000000000000006044820152606490fd5b62000124565b60405162461bcd60e51b815260206004820152601860248201527f417267756d656e74206c656e677468206d69736d6174636800000000000000006044820152606490fd5b82516001600160a01b0381168103620004a057815260209283019201620000e1565b600080fd5b83516001600160401b038111620004a05782019086603f83011215620004a0576020820151906001600160401b0382116200052257620004ef601f8301601f191660200162000537565b8281528860408486010111620004a057620005166020949385946040868501910162000575565b81520193019262000083565b60246000634e487b7160e01b81526041600452fd5b6040519190601f01601f191682016001600160401b038111838210176200038757604052565b6001600160401b038111620003875760051b60200190565b60005b838110620005895750506000910152565b818101518382015260200162000578565b8051821015620005af5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c90816313af403514610fcb578163246f8b9614610f5257816336b19cd714610eff5781633c06b7be14610d605781634eed305414610cce578163701406a9146107cc578163704b6c021461069e57816385ef78d5146101be5781639335dcb71461016d575080639a202d47146100f15763c06e0ada1461009b57600080fd5b346100ed5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ed573573ffffffffffffffffffffffffffffffffffffffff8116036100ea5780f35b80fd5b5080fd5b82346100ea57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ea5761014273ffffffffffffffffffffffffffffffffffffffff825416331461124c565b7fffffffffffffffffffffffff00000000000000000000000000000000000000006001541660015580f35b8390346100ed57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ed5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b839150346100ed57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ed5767ffffffffffffffff92803584811161069a5761020f90369083016111d2565b9060249182359373ffffffffffffffffffffffffffffffffffffffff928386168096036106965760019784895416330361063a57863b156105b95786885260209560028752610260848a20546110ec565b610538578451156104dd5783519585519688818189019961028281838d6111af565b81016003815203019020541661048257878952600287528389209285519283116104585750506102b282546110ec565b601f8111610412575b508598601f82116001146103775781808a9b6103179a9b9261034c575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c19161790555b519384928392519283916111af565b81016003815203019020907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580f35b87015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6102d8565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0811699838a52878a20908a5b8c81106103fd5750826103179a9b9c106103c6575b5050811b019055610308565b8601517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690558a806103ba565b878201518355918401919089019089016103a5565b828952868920601f830160051c81019188841061044e575b601f0160051c01908a905b8281106104435750506102bb565b8a8155018a90610435565b909150819061042a565b60418a917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b601f91508660649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416c726561647920616464656420626173652061737365742073796d626f6c006044820152fd5b601991508660649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c696420626173652061737365742073796d626f6c000000000000006044820152fd5b602291508660849451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f416c726561647920616464656420436861696e6c696e6b20616767726567617460448201527f6f720000000000000000000000000000000000000000000000000000000000006064820152fd5b5084602060849351927f08c379a0000000000000000000000000000000000000000000000000000000008452830152808201527f496e76616c696420436861696e6c696e6b2061676772656761746f722061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b50601b85602060649451937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f43616c6c6572206d7573742062652041646d696e2077616c6c657400000000006044820152fd5b8680fd5b8380fd5b9050346107c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107c85781359173ffffffffffffffffffffffffffffffffffffffff918284168094036107c45761070083865416331461124c565b61070b8415156112b1565b60015492831684146107425750507fffffffffffffffffffffffff0000000000000000000000000000000000000000161760015580f35b90602060849251917f08c379a00000000000000000000000000000000000000000000000000000000083528201526024808201527f4d75737420626520646966666572656e742066726f6d2063757272656e74206160448201527f646d696e000000000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b9050346107c857602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ea5767ffffffffffffffff9083358281116100ed5761084a8661083873ffffffffffffffffffffffffffffffffffffffff93369089016111d2565b818751938285809451938492016111af565b8101600381520301902054168015610c72578351907ffeaf968c00000000000000000000000000000000000000000000000000000000825260a0828781845afa918215610b99578392610c25575b5082821315610ba3578686918651928380927f313ce5670000000000000000000000000000000000000000000000000000000082525afa8015610b99578390610b61575b60ff915016868111610adf576008811115610a56577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80160ff8111610a2a5760ff610927911661132d565b9182156109fe5750045b8181116109a25716918215610947575051908152f35b8360649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f556e6578706563746564206e6f6e2d706f7369746976652070726963650000006044820152fd5b606484868551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f506970207175616e74697479206f766572666c6f77732075696e7436340000006044820152fd5b806012877f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b6024836011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60089291920360ff8111610ab35760ff610a70911661132d565b91828102928184041490151715610a875750610931565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b6024826011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b608486888751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602760248201527f41737365742063616e6e6f742068617665206d6f7265207468616e203332206460448201527f6563696d616c73000000000000000000000000000000000000000000000000006064820152fd5b508681813d8311610b92575b610b77818361113f565b810103126107c8575160ff811681036107c85760ff906108dc565b503d610b6d565b85513d85823e3d90fd5b608486888751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f556e6578706563746564206e6f6e2d706f73697469766520666565642070726960448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b90915060a0813d8211610c6a575b81610c4060a0938361113f565b810103126107c857610c5181611316565b50610c626080888301519201611316565b509038610898565b3d9150610c33565b606485878651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f4d697373696e672061676772656761746f7220666f722073796d626f6c0000006044820152fd5b905082346100ea5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ea5782359067ffffffffffffffff82116100ea5750610d4d6020610d3b819573ffffffffffffffffffffffffffffffffffffffff943691016111d2565b818551938285809451938492016111af565b8101600381520301902054169051908152f35b905082346100ea57602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ed573573ffffffffffffffffffffffffffffffffffffffff81168091036100ed57815260028352818120825182858294918454610dce816110ec565b91828652838601966001928381169081600014610ea05750600114610e46575b848a887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8c610e21848d038561113f565b610e3d85519687958187525192838092880152878701906111af565b01168101030190f35b9080949550528383205b828410610e8a5750505082010185827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f610e21610dee565b8054888501860152879550928401928101610e50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016895250505050151560051b830101905085827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f610e21610dee565b8390346100ed57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ed5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b83346100ea57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ea577fffffffffffffffffffffffff00000000000000000000000000000000000000008154610fc573ffffffffffffffffffffffffffffffffffffffff8216331461124c565b16815580f35b9050346107c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107c85781359173ffffffffffffffffffffffffffffffffffffffff918284168094036107c457845492831661102f81331461124c565b61103a8515156112b1565b841461106a5750507fffffffffffffffffffffffff00000000000000000000000000000000000000001617815580f35b90602060849251917f08c379a00000000000000000000000000000000000000000000000000000000083528201526024808201527f4d75737420626520646966666572656e742066726f6d2063757272656e74206f60448201527f776e6572000000000000000000000000000000000000000000000000000000006064820152fd5b90600182811c92168015611135575b602083101461110657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916110fb565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761118057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60005b8381106111c25750506000910152565b81810151838201526020016111b2565b81601f820112156112475780359067ffffffffffffffff8211611180576040519261122560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116018561113f565b8284526020838301011161124757816000926020809301838601378301015290565b600080fd5b1561125357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616c6c6572206d757374206265204f776e65722077616c6c657400000000006044820152fd5b156112b857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642077616c6c65742061646472657373000000000000000000006044820152fd5b519069ffffffffffffffffffff8216820361124757565b801561140157600190602081108216604e82108316176113f9578190600a925b8082116113b2575050817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048111611383570290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9092807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048111611383578184166113f0575b800292811c9061134d565b809202916113e5565b9050600a0a90565b5060019056fea26469706673582212208187f5ce9633d258e2effeaf353592d944efec3e99c711291c5fa1f9c51e81ac64736f6c63430008120033';

type ChainlinkOraclePriceAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkOraclePriceAdapterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkOraclePriceAdapter__factory extends ContractFactory {
  constructor(...args: ChainlinkOraclePriceAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    baseAssetSymbols: string[],
    chainlinkAggregators: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      baseAssetSymbols,
      chainlinkAggregators,
      overrides || {},
    );
  }
  override deploy(
    baseAssetSymbols: string[],
    chainlinkAggregators: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(
      baseAssetSymbols,
      chainlinkAggregators,
      overrides || {},
    ) as Promise<
      ChainlinkOraclePriceAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null,
  ): ChainlinkOraclePriceAdapter__factory {
    return super.connect(runner) as ChainlinkOraclePriceAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkOraclePriceAdapterInterface {
    return new Interface(_abi) as ChainlinkOraclePriceAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): ChainlinkOraclePriceAdapter {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as ChainlinkOraclePriceAdapter;
  }
}

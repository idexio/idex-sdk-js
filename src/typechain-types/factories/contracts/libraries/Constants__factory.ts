/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  Constants,
  ConstantsInterface,
} from '../../../contracts/libraries/Constants';

const _abi = [
  {
    inputs: [],
    name: 'DELEGATED_KEY_AUTHORIZATION_MESSAGE_HASH',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DEPOSIT_INDEX_NOT_SET',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EIP_712_DOMAIN_NAME',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EIP_712_DOMAIN_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EIP_712_TYPE_HASH_DELEGATED_KEY_AUTHORIZATION',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EIP_712_TYPE_HASH_DOMAIN',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EIP_712_TYPE_HASH_ORDER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EIP_712_TYPE_HASH_TRANSFER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EIP_712_TYPE_HASH_WITHDRAWAL',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EMPTY_DECIMAL_STRING',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EXIT_FUND_WITHDRAW_DELAY_IN_S',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FIELD_UPGRADE_DELAY_IN_S',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FUNDING_PERIOD_IN_MS',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_CHAIN_PROPAGATION_PERIOD_IN_S',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_DELEGATE_KEY_EXPIRATION_PERIOD_IN_MS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_FEE_MULTIPLIER',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_FUNDING_TIME_PERIOD_PER_UPDATE_IN_MS',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_MAXIMUM_POSITION_SIZE',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_NUMBER_OF_MARKETS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MINIMUM_QUOTE_QUANTITY_VALIDATION_THRESHOLD',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PIP_PRICE_MULTIPLIER',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'QUOTE_ASSET_SYMBOL',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'QUOTE_TOKEN_DECIMALS',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6080806040523461001a576108579081610020823930815050f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182630348a74c1461072c575081630af99d5e146104bf5781630ee5b265146106d85781631132fd22146106575781632bfad7dd146104145781632d6ba223146105d8578163329afacd146105a357816338dec5621461054f5781634708d05c1461051857816365afdb24146104c4578163821cc439146104bf5781638e1352cb146104895781638f77c2631461044d5781639c4f1cf114610414578163a18cf600146103c0578163a2a6cbec14610384578163a2e48c1014610330578163a4837349146102f8578163a93b10de14610277578163aa1fbd59146101c657508063b699414414610190578063d8c31f911461015c5763fb6c9f441461012257600080fd5b817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602090516301b774008152f35b5080fd5b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020905160ff8152f35b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101585760209051624c4b408152f35b8383817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158578051918183019083821067ffffffffffffffff83111761024b575061024793508152600582527f312e302e30000000000000000000000000000000000000000000000000000000602083015251918291826107bb565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8383817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158578051918183019083821067ffffffffffffffff83111761024b575061024793508152600a82527f302e303030303030303000000000000000000000000000000000000000000000602083015251918291826107bb565b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602090516305f5e1008152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602090517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020905167ffffffffffffffff8152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602090517f54cc929e42bb84ab7f5e1766c17dcac18b92ad550b2efb4ba982c2e155e0609e8152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101585760209051640757b12c008152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101585760209051677fffffffffffffff8152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602090516127108152f35b61077f565b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602090517f8b752ab52672e4daae0c72771a9cce783f4f38f3276743e0f0e1cfb49284208d8152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020905162093a808152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602090517f37b9359cb5027a797928c73a7804ae963921e5248ac4f31521c2ce2e69e5d8fc8152f35b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020905160068152f35b8383817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158578051918183019083821067ffffffffffffffff83111761024b57509261024793825282527f4b756d6100000000000000000000000000000000000000000000000000000000602083015251918291826107bb565b8383817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158578051918183019083821067ffffffffffffffff83111761024b575061024793508152600382527f5553440000000000000000000000000000000000000000000000000000000000602083015251918291826107bb565b5050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602090517fe6fa057b2d0c1fb44fb6433cd6c3ec9526bafc801d18d5ba2f9ed6c7e37fd3a88152f35b8490817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857807fb6fd73b8e18a07608adf67586a63900d5ced3872d71907f1afabfc8b7993249260209252f35b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107b6576020604051620151808152f35b600080fd5b60208082528251818301819052939260005b85811061080d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016107cd56fea2646970667358221220e4eb0089b4e49e6b4edeab013a3d2b1d488d6549d0bbfa595d46473d73607fde64736f6c63430008120033';

type ConstantsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantsConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Constants__factory extends ContractFactory {
  constructor(...args: ConstantsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Constants & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Constants__factory {
    return super.connect(runner) as Constants__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantsInterface {
    return new Interface(_abi) as ConstantsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Constants {
    return new Contract(address, _abi, runner) as unknown as Constants;
  }
}

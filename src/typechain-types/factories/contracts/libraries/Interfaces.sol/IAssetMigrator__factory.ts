/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  IAssetMigrator,
  IAssetMigratorInterface,
} from '../../../../contracts/libraries/Interfaces.sol/IAssetMigrator';

const _abi = [
  {
    inputs: [],
    name: 'destinationAsset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sourceAsset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'quantityInAssetUnits',
        type: 'uint256',
      },
    ],
    name: 'migrate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IAssetMigrator__factory {
  static readonly abi = _abi;
  static createInterface(): IAssetMigratorInterface {
    return new Interface(_abi) as IAssetMigratorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): IAssetMigrator {
    return new Contract(address, _abi, runner) as unknown as IAssetMigrator;
  }
}

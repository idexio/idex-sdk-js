/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  Depositing,
  DepositingInterface,
} from '../../../contracts/libraries/Depositing';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'index',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'sourceWallet',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'destinationWallet',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'quantity',
        type: 'uint64',
      },
    ],
    name: 'Deposited',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'wallet',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'quantity',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'int64',
        name: 'newExchangeBalance',
        type: 'int64',
      },
    ],
    name: 'PendingDepositApplied',
    type: 'event',
  },
] as const;

const _bytecode =
  '0x6080806040523461001c57610ebd90816100228239308160070152f35b600080fdfe6080604052307f000000000000000000000000000000000000000000000000000000000000000014600436101561003557600080fd5b60003560e01c80633421aa3b146105d35763396b86981461005557600080fd5b6104f85760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f85760043567ffffffffffffffff908181168091036104f8576100a2610da0565b604435926064359073ffffffffffffffffffffffffffffffffffffffff8093169283600052602092808452826040600020541680871161054f57869003908382116102865785600052845282604060002091167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008254161790556040519060408201828110848211176105205760405260038252838201907f55534400000000000000000000000000000000000000000000000000000000008252856000528785526040600020856040518092865161017c818489610e56565b820190815203019020976000606060405161019681610d43565b8281528289820152826040820152015288549360ff85161580610511575b610313575b505050505050677fffffffffffffff928381116102b55784548160070b9060081c60070b01937fffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000851290851317610286578461026d6060957f593c28825f5d8b283d580db56c7c9fae001aabbc26e866ab0138d0f98cdb434c97907fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ff82549160081b68ffffffffffffffff00169116179055565b5460081c60070b916040519384528301526040820152a1005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b606482604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601c60248201527f506970207175616e74697479206f766572666c6f777320696e743634000000006044820152fd5b608092600161039193015416906064897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051988997889687957fdaa3629200000000000000000000000000000000000000000000000000000000875260048701526040602487015251809281604488015287870190610e56565b011681010301915afa92831561050557600093610461575b5050818301517fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000090911668ffffffffffffffff0060089290921b919091161760011785556060810151907fffffffffffffff00000000000000000000000000000000ffffffffffffffffff78ffffffffffffffff00000000000000000000000000000000006040885493015160481b70ffffffffffffffff000000000000000000169360881b169116171784553880808080806101b9565b909192506080823d82116104fd575b8161047d60809383610d5f565b810103126104f85760606040519261049484610d43565b61049d81610dc3565b84526104aa868201610e79565b868501526104ba60408201610e79565b6040850152015190811681036104f8576060820152907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060016103a9565b600080fd5b3d9150610470565b6040513d6000823e3d90fd5b508260018301541615156101b4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b608485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602160248201527f5175616e7469747920746f206170706c7920657863656564732070656e64696e60448201527f67000000000000000000000000000000000000000000000000000000000000006064820152fd5b506104f8577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360161014081126104f8576101008091126104f8576080016080811067ffffffffffffffff8211176105205760405260043573ffffffffffffffffffffffffffffffffffffffff811681036104f857608052610653610da0565b60a05260443560c090815260643573ffffffffffffffffffffffffffffffffffffffff811681036104f85760e05260843567ffffffffffffffff8116908181036104f8576101005260a43573ffffffffffffffffffffffffffffffffffffffff811681036104f85761012090815260c435801515908181036104f8576101405260e43573ffffffffffffffffffffffffffffffffffffffff811681036104f85761016052610124359267ffffffffffffffff14159081610d3b575b5015610cdd5773ffffffffffffffffffffffffffffffffffffffff806080511691511614610c7f5773ffffffffffffffffffffffffffffffffffffffff602060800151166000528060205260ff60406000205416610c215773ffffffffffffffffffffffffffffffffffffffff6080511660005260205260ff60406000205416610bc3576107a567ffffffffffffffff9151610dd0565b168015610b6557677fffffffffffffff811015610b075773ffffffffffffffffffffffffffffffffffffffff60e0608001511690602073ffffffffffffffffffffffffffffffffffffffff606060800151166024604051809581937f70a0823100000000000000000000000000000000000000000000000000000000835260048301525afa91821561050557600092610ad3575b506101605160a05160e0516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152908216602482015260649384900460448201529260209284928391600091165af1801561050557610a9a575b5073ffffffffffffffffffffffffffffffffffffffff60e0608001511690602073ffffffffffffffffffffffffffffffffffffffff606060800151166024604051809581937f70a0823100000000000000000000000000000000000000000000000000000000835260048301525afa91821561050557600092610a66575b5081039081116102865761094490610dd0565b73ffffffffffffffffffffffffffffffffffffffff6080511660005261010435602052604060002067ffffffffffffffff81549216918267ffffffffffffffff82160167ffffffffffffffff81116102865767ffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000091169116179055600167ffffffffffffffff608080015116019067ffffffffffffffff8211610286577f1cf75fbf194df3b1e795dee59211cfc2da3c783e50fd5187f8fd442e05bd6c629160809173ffffffffffffffffffffffffffffffffffffffff6020608001511673ffffffffffffffffffffffffffffffffffffffff608051169067ffffffffffffffff60405194168452602084015260408301526060820152a1005b9091506020813d602011610a92575b81610a8260209383610d5f565b810103126104f857519038610931565b3d9150610a75565b6020813d602011610acb575b81610ab360209383610d5f565b810103126104f857610ac490610dc3565b50386108b3565b3d9150610aa6565b9091506020813d602011610aff575b81610aef60209383610d5f565b810103126104f857519038610839565b3d9150610ae2565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5175616e7469747920697320746f6f206c6172676500000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5175616e7469747920697320746f6f206c6f77000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f44657374696e6174696f6e2077616c6c657420657869746564000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f536f757263652077616c6c6574206578697465640000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f43616e6e6f74206465706f73697420746f2045460000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4465706f736974732064697361626c65640000000000000000000000000000006044820152fd5b90503861070e565b6080810190811067ffffffffffffffff82111761052057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761052057604052565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036104f857565b519081151582036104f857565b6064810290808204606414901517156102865767ffffffffffffffff90818111610df8571690565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f506970207175616e74697479206f766572666c6f77732075696e7436340000006044820152fd5b60005b838110610e695750506000910152565b8181015183820152602001610e59565b51908160070b82036104f85756fea2646970667358221220d28508e1a6c1f5f2ce9cd6a0d6e57eb39ee21ecfd57498bd3d4b95fd4b48412f64736f6c63430008120033';

type DepositingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositingConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Depositing__factory extends ContractFactory {
  constructor(...args: DepositingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Depositing & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Depositing__factory {
    return super.connect(runner) as Depositing__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositingInterface {
    return new Interface(_abi) as DepositingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Depositing {
    return new Contract(address, _abi, runner) as unknown as Depositing;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type {
  NativeConverterMock,
  NativeConverterMockInterface,
} from '../../../../contracts/test/NativeConverterMock.sol/NativeConverterMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sourceAsset_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'destinationAsset_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'convert',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'destinationAsset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mintFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'mintFee_',
        type: 'uint256',
      },
    ],
    name: 'setMintFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sourceAsset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'zkBWUSDC',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'zkUSDCe',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c03461008857601f61063038819003918201601f19168301916001600160401b0383118484101761008d57808492604094855283398101031261008857610052602061004b836100a3565b92016100a3565b9060805260a05260405161057890816100b882396080518181816101420152610467015260a05181818161022601526104db0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100885756fe60806040908082526004908136101561001757600080fd5b600092833560e01c91826313966db5146103e45750816320dcfbe9146100b157816389eabf02146100b65750806391aa880c146100ac5780639386994b146100b15780639f2efcf8146100ac5763eddd0d9c1461007357600080fd5b346100a85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100a85735815580f35b5080fd5b610490565b61041c565b9050346102e25760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102e25773ffffffffffffffffffffffffffffffffffffffff823581811681036103e0576024359167ffffffffffffffff60443581811161039a573660238201121561039a57808701358281116103dc573691016024011161033957817f000000000000000000000000000000000000000000000000000000000000000016908551907f23b872dd00000000000000000000000000000000000000000000000000000000825233888301523060248301528560448301526020826064818c875af180156103d25761033d575b5050803b156103395786855180927f9dc29fac0000000000000000000000000000000000000000000000000000000082528183816102148a8d309084016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1801561032f5761031c575b507f00000000000000000000000000000000000000000000000000000000000000001693855483039283116102f057908591853b156102e2576102b3855194859384937f40c10f1900000000000000000000000000000000000000000000000000000000855284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b038183875af180156102e6576102ce575b6020838351908152f35b6102d884916104ff565b6102e257826102c4565b8280fd5b82513d86823e3d90fd5b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b610328909691966104ff565b9438610223565b85513d89823e3d90fd5b8680fd5b6020903d82116103ca575b601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683019081118382101761039e57602091839189528101031261039a5751801515036103395738806101af565b8780fd5b60248a60418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b3d9150610348565b87513d8b823e3d90fd5b8880fd5b8480fd5b8490346100a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100a857602091548152f35b3461048b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048b57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b600080fd5b3461048b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261048b57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b67ffffffffffffffff811161051357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220ec65b741d9c4dceecffdf63e9ef105d2384f7a42c3b708f2b823fb8973fb844764736f6c63430008120033';

type NativeConverterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NativeConverterMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NativeConverterMock__factory extends ContractFactory {
  constructor(...args: NativeConverterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    sourceAsset_: AddressLike,
    destinationAsset_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      sourceAsset_,
      destinationAsset_,
      overrides || {},
    );
  }
  override deploy(
    sourceAsset_: AddressLike,
    destinationAsset_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(
      sourceAsset_,
      destinationAsset_,
      overrides || {},
    ) as Promise<
      NativeConverterMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null,
  ): NativeConverterMock__factory {
    return super.connect(runner) as NativeConverterMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NativeConverterMockInterface {
    return new Interface(_abi) as NativeConverterMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): NativeConverterMock {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as NativeConverterMock;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  PythMock,
  PythMockInterface,
} from '../../../contracts/test/PythMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_validTimePeriod',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_singleUpdateFeeInWei',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientFee',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidArgument',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoFreshUpdate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PriceFeedNotFound',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PriceFeedNotFoundWithinRange',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StalePrice',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint16',
        name: 'chainId',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'sequenceNumber',
        type: 'uint64',
      },
    ],
    name: 'BatchPriceFeedUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'publishTime',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'int64',
        name: 'price',
        type: 'int64',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'conf',
        type: 'uint64',
      },
    ],
    name: 'PriceFeedUpdate',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
      {
        internalType: 'int64',
        name: 'price',
        type: 'int64',
      },
      {
        internalType: 'uint64',
        name: 'conf',
        type: 'uint64',
      },
      {
        internalType: 'int32',
        name: 'expo',
        type: 'int32',
      },
      {
        internalType: 'int64',
        name: 'emaPrice',
        type: 'int64',
      },
      {
        internalType: 'uint64',
        name: 'emaConf',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'publishTime',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'prevPublishTime',
        type: 'uint64',
      },
    ],
    name: 'createPriceFeedUpdateData',
    outputs: [
      {
        internalType: 'bytes',
        name: 'priceFeedData',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
    ],
    name: 'getEmaPrice',
    outputs: [
      {
        components: [
          {
            internalType: 'int64',
            name: 'price',
            type: 'int64',
          },
          {
            internalType: 'uint64',
            name: 'conf',
            type: 'uint64',
          },
          {
            internalType: 'int32',
            name: 'expo',
            type: 'int32',
          },
          {
            internalType: 'uint256',
            name: 'publishTime',
            type: 'uint256',
          },
        ],
        internalType: 'struct PythStructs.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'age',
        type: 'uint256',
      },
    ],
    name: 'getEmaPriceNoOlderThan',
    outputs: [
      {
        components: [
          {
            internalType: 'int64',
            name: 'price',
            type: 'int64',
          },
          {
            internalType: 'uint64',
            name: 'conf',
            type: 'uint64',
          },
          {
            internalType: 'int32',
            name: 'expo',
            type: 'int32',
          },
          {
            internalType: 'uint256',
            name: 'publishTime',
            type: 'uint256',
          },
        ],
        internalType: 'struct PythStructs.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
    ],
    name: 'getEmaPriceUnsafe',
    outputs: [
      {
        components: [
          {
            internalType: 'int64',
            name: 'price',
            type: 'int64',
          },
          {
            internalType: 'uint64',
            name: 'conf',
            type: 'uint64',
          },
          {
            internalType: 'int32',
            name: 'expo',
            type: 'int32',
          },
          {
            internalType: 'uint256',
            name: 'publishTime',
            type: 'uint256',
          },
        ],
        internalType: 'struct PythStructs.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
    ],
    name: 'getPrice',
    outputs: [
      {
        components: [
          {
            internalType: 'int64',
            name: 'price',
            type: 'int64',
          },
          {
            internalType: 'uint64',
            name: 'conf',
            type: 'uint64',
          },
          {
            internalType: 'int32',
            name: 'expo',
            type: 'int32',
          },
          {
            internalType: 'uint256',
            name: 'publishTime',
            type: 'uint256',
          },
        ],
        internalType: 'struct PythStructs.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'age',
        type: 'uint256',
      },
    ],
    name: 'getPriceNoOlderThan',
    outputs: [
      {
        components: [
          {
            internalType: 'int64',
            name: 'price',
            type: 'int64',
          },
          {
            internalType: 'uint64',
            name: 'conf',
            type: 'uint64',
          },
          {
            internalType: 'int32',
            name: 'expo',
            type: 'int32',
          },
          {
            internalType: 'uint256',
            name: 'publishTime',
            type: 'uint256',
          },
        ],
        internalType: 'struct PythStructs.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
    ],
    name: 'getPriceUnsafe',
    outputs: [
      {
        components: [
          {
            internalType: 'int64',
            name: 'price',
            type: 'int64',
          },
          {
            internalType: 'uint64',
            name: 'conf',
            type: 'uint64',
          },
          {
            internalType: 'int32',
            name: 'expo',
            type: 'int32',
          },
          {
            internalType: 'uint256',
            name: 'publishTime',
            type: 'uint256',
          },
        ],
        internalType: 'struct PythStructs.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'updateData',
        type: 'bytes[]',
      },
    ],
    name: 'getUpdateFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'feeAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getValidTimePeriod',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'updateData',
        type: 'bytes[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'priceIds',
        type: 'bytes32[]',
      },
      {
        internalType: 'uint64',
        name: 'minPublishTime',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'maxPublishTime',
        type: 'uint64',
      },
    ],
    name: 'parsePriceFeedUpdates',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'id',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'int64',
                name: 'price',
                type: 'int64',
              },
              {
                internalType: 'uint64',
                name: 'conf',
                type: 'uint64',
              },
              {
                internalType: 'int32',
                name: 'expo',
                type: 'int32',
              },
              {
                internalType: 'uint256',
                name: 'publishTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct PythStructs.Price',
            name: 'price',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int64',
                name: 'price',
                type: 'int64',
              },
              {
                internalType: 'uint64',
                name: 'conf',
                type: 'uint64',
              },
              {
                internalType: 'int32',
                name: 'expo',
                type: 'int32',
              },
              {
                internalType: 'uint256',
                name: 'publishTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct PythStructs.Price',
            name: 'emaPrice',
            type: 'tuple',
          },
        ],
        internalType: 'struct PythStructs.PriceFeed[]',
        name: 'feeds',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'updateData',
        type: 'bytes[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'priceIds',
        type: 'bytes32[]',
      },
      {
        internalType: 'uint64',
        name: 'minPublishTime',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'maxPublishTime',
        type: 'uint64',
      },
    ],
    name: 'parsePriceFeedUpdatesUnique',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'id',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'int64',
                name: 'price',
                type: 'int64',
              },
              {
                internalType: 'uint64',
                name: 'conf',
                type: 'uint64',
              },
              {
                internalType: 'int32',
                name: 'expo',
                type: 'int32',
              },
              {
                internalType: 'uint256',
                name: 'publishTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct PythStructs.Price',
            name: 'price',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int64',
                name: 'price',
                type: 'int64',
              },
              {
                internalType: 'uint64',
                name: 'conf',
                type: 'uint64',
              },
              {
                internalType: 'int32',
                name: 'expo',
                type: 'int32',
              },
              {
                internalType: 'uint256',
                name: 'publishTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct PythStructs.Price',
            name: 'emaPrice',
            type: 'tuple',
          },
        ],
        internalType: 'struct PythStructs.PriceFeed[]',
        name: 'feeds',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
    ],
    name: 'priceFeedExists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
    ],
    name: 'queryPriceFeed',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'id',
            type: 'bytes32',
          },
          {
            components: [
              {
                internalType: 'int64',
                name: 'price',
                type: 'int64',
              },
              {
                internalType: 'uint64',
                name: 'conf',
                type: 'uint64',
              },
              {
                internalType: 'int32',
                name: 'expo',
                type: 'int32',
              },
              {
                internalType: 'uint256',
                name: 'publishTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct PythStructs.Price',
            name: 'price',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int64',
                name: 'price',
                type: 'int64',
              },
              {
                internalType: 'uint64',
                name: 'conf',
                type: 'uint64',
              },
              {
                internalType: 'int32',
                name: 'expo',
                type: 'int32',
              },
              {
                internalType: 'uint256',
                name: 'publishTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct PythStructs.Price',
            name: 'emaPrice',
            type: 'tuple',
          },
        ],
        internalType: 'struct PythStructs.PriceFeed',
        name: 'priceFeed',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'updateData',
        type: 'bytes[]',
      },
    ],
    name: 'updatePriceFeeds',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'updateData',
        type: 'bytes[]',
      },
      {
        internalType: 'bytes32[]',
        name: 'priceIds',
        type: 'bytes32[]',
      },
      {
        internalType: 'uint64[]',
        name: 'publishTimes',
        type: 'uint64[]',
      },
    ],
    name: 'updatePriceFeedsIfNecessary',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60803461005957601f61164b38819003918201601f19168301916001600160401b0383118484101761005e57808492604094855283398101031261005957602081519101516002556003556040516115d690816100758239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c90816331d98b3f14610c2f5781634716e9c514610965578163711a2e28146109465781639474f45b1461090157816396834ad31461087b578163a4ae35e01461085c578163accca7f914610529578163b5dcc911146104a3578163b5ec02611461044d578163b9256d28146103c7578163caaf43f114610379578163d47eed4514610314578163d9b81c3c14610160578163e18910a314610123575063ef9e5e28146100c757600080fd5b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011f57803567ffffffffffffffff811161011b576101189161011291369101610c7e565b90611333565b80f35b8280fd5b5080fd5b83903461011f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011f576020906003549051908152f35b90503461011b576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011b57602435928360070b809403610311576044359067ffffffffffffffff9384831680930361011f57606435958660030b80970361011b57608435968760070b80980361030d5760a435908782168092036103095760c435918883168093036103055760e43593898516809503610301579188999a9184606080958461021461114a565b9d8e9d8e8d35905260209e8f8091019485515284510152825101525101528a8a01928351528883510152898251015251015261025586519585870190610d4e565b61014090818601528452610160840195848710908711176102d5575084845281855282519182610180850152815b8381106102c05750508282016101a00152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b80829186016101a08382015191015201610283565b9060416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8680fd5b8580fd5b8480fd5b8380fd5b80fd5b905082346103115760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103115782359067ffffffffffffffff8211610311575061036b60209361037292369101610c7e565b905061155e565b9051908152f35b905082346103115760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031157506103c56103bc61012093356111b8565b91518092610d4e565bf35b505060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011f5767ffffffffffffffff813581811161030d576104129036908401610c7e565b916024358181116103055761042a9036908601610c7e565b91604435908111610301576101189561044591369101610c7e565b949093611053565b905082346103115760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610311575061049a602092356000526000602052604060002054151590565b90519015158152f35b905082346103115760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031157506103c56104f26080936104e7610efa565b506003549035610f7f565b9151809260608091805160070b845267ffffffffffffffff6020820151166020850152604081015160030b60408501520151910152565b83915061053536610cc9565b6105418598929861155e565b34106108345761055083611574565b9761055d8851998a610eb9565b8389527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061058a85611574565b01835b81811061081c575050825b8481106105b0578851806105ac8c82610dd5565b0390f35b835b87811061060e575b506105c5818b61158c565b51516105d2828789611014565b35036105e6576105e190610fe7565b610598565b8a89517f45805f5d000000000000000000000000000000000000000000000000000000008152fd5b61062081898b9d98999a949c9b61123d565b810161014082820312610301578a8e836106548f9461012061064661064d928e996112f5565b9301610cb4565b948c61158c565b528d6060908b84602092848461066a838661158c565b5101510151809961067b838661158c565b51518152808652600293849120015410610735575b9450509150506106a0925061158c565b51516106ad8d8b8d611014565b35146106cc575b50506106bf90610fe7565b99979890969594996105b2565b67ffffffffffffffff9c9a9b939998979c80861691838311159384610728575b508361071c575b5050506000036105ba576106bf9085610713848e999a9b959d9c9e61158c565b5152908d6106b4565b161090508d80806106f3565b88831610159350386106ec565b8061074361074a928561158c565b519361158c565b51518d528c8352858d2095825187556001870193808401519485519581546fffffffffffffffff000000000000000095898786850151881b1693878101519560809b8c9673ffffffff000000000000000000000000000000009667ffffffffffffffff98897fffffffffffffffffffffffff00000000000000000000000000000000000000009b8c921b8a169416911617171790550151908c01558460038c01970151978851968854958a0151871b1695890151901b1694169116171717905501519101558a8e38808f818d91610690565b808b6020809361082a61114a565b920101520161058d565b8887517f025dbdd4000000000000000000000000000000000000000000000000000000008152fd5b83903461011f576080906103c56104f261087536610e1e565b90610f1f565b905082346103115760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031157506103c560206108c86080946108c1610efa565b50356111b8565b01519151809260608091805160070b845267ffffffffffffffff6020820151166020850152604081015160030b60408501520151910152565b905082346103115760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031157506103c5816108c86080946108c1610efa565b83903461011f576080906103c56104f261095f36610e1e565b90610f7f565b83915061097136610cc9565b61097d8598929861155e565b34106108345761098c83611574565b976109998851998a610eb9565b8389527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06109c685611574565b01835b818110610c17575050825b8481106109e8578851806105ac8c82610dd5565b835b878110610a1e575b506109fd818b61158c565b5151610a0a828789611014565b35036105e657610a1990610fe7565b6109d4565b610a3081898b9d98999a949c9b61123d565b81016101408282031261030157610120610a4d610a5492846112f5565b9201610cb4565b50610a5f8b8861158c565b5289898d606060208a848383610a75898561158c565b510151015196610a85818461158c565b51518d528c8452878d600293849120015410610b38575b945050915050610aac925061158c565b5151610ab98c8a8c611014565b3514610ad7575b50610aca90610fe7565b99979890969594996109ea565b67ffffffffffffffff9b999a929897969b908082861611159182610b2b575b505080610b23575b6000036109f257610aca9085610b1b848e999a9b959d9c9e61158c565b515290610ac0565b506001610afe565b8616101590508d80610af6565b80610743610b46928561158c565b51518c528b8352858c2095825187556001870193808401519485519581546fffffffffffffffff000000000000000095898786850151881b1693878101519560809b8c9673ffffffff000000000000000000000000000000009667ffffffffffffffff98897fffffffffffffffffffffffff00000000000000000000000000000000000000009b8c921b8a169416911617171790550151908c01558460038c01970151978851968854958a0151871b1695890151901b169416911617171790550151910155898d8f808a8f80610a9c565b808b60208093610c2561114a565b92010152016109c9565b905082346103115760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031157506103c56104f2608093610c73610efa565b506003549035610f1f565b9181601f84011215610caf5782359167ffffffffffffffff8311610caf576020808501948460051b010111610caf57565b600080fd5b359067ffffffffffffffff82168203610caf57565b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc820112610caf5767ffffffffffffffff600435818111610caf5782610d1391600401610c7e565b9390939260243590838211610caf57610d2e91600401610c7e565b929092916044358281168103610caf57916064359081168103610caf5790565b9060a06040610dd39380518452610d9b6020820151602086019060608091805160070b845267ffffffffffffffff6020820151166020850152604081015160030b60408501520151910152565b015191019060608091805160070b845267ffffffffffffffff6020820151166020850152604081015160030b60408501520151910152565b565b6020908160408183019282815285518094520193019160005b828110610dfc575050505090565b909192938261012082610e126001948951610d4e565b01950193929101610dee565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610caf576004359060243590565b6080810190811067ffffffffffffffff821117610e6e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610e6e57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e6e57604052565b60405190610f0782610e52565b60006060838281528260208201528260408201520152565b610f3c602091610f2d610efa565b50610f36610efa565b506111b8565b015190610f4d606083015142610fc9565b11610f555790565b60046040517f19abf40e000000000000000000000000000000000000000000000000000000008152fd5b610f3c604091610f2d610efa565b91908203918211610f9a57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81811115610fde5790610fdb91610f8d565b90565b610fdb91610f8d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f9a5760010190565b91908110156110245760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b92909385820361112057600091825b8181106110935760046040517fde2c57fa000000000000000000000000000000000000000000000000000000008152fd5b6110b56110a1828488611014565b356000526000602052604060002054151590565b1580156110de575b6110cf576110ca90610fe7565b611062565b5050505050610dd39250611333565b50606060206110f76110f184868a611014565b356111b8565b01510151611106828a86611014565b359067ffffffffffffffff821680920361030557106110bd565b60046040517fa9cb9e0d000000000000000000000000000000000000000000000000000000008152fd5b6040519061115782610e9d565b8160008152611164610efa565b60208201526040611173610efa565b910152565b9060405161118581610e52565b60606001829480548060070b855267ffffffffffffffff8160401c16602086015260801c60030b60408501520154910152565b6111c061114a565b50600081815280602052604081205415611213576040918152806020522061120b6003604051926111f084610e9d565b8054845261120060018201611178565b602085015201611178565b604082015290565b60046040517f14aebe68000000000000000000000000000000000000000000000000000000008152fd5b91908110156110245760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610caf57019081359167ffffffffffffffff8311610caf576020018236038113610caf579190565b9190826080910312610caf576040516112b581610e52565b809280358060070b8103610caf5782526112d160208201610cb4565b602083015260408101358060030b8103610caf576040830152606090810135910152565b919061012083820312610caf57604061117381519261131384610e9d565b60a0849680358652611328836020830161129d565b60208701520161129d565b919061133e8161155e565b34106115345760005b8181106113c6575050905060015467ffffffffffffffff60018183167f943f0e8a16c19895fb87cbeb1a349ed86d7f31923089dd36c1a1ed5e300f267b60408051848152836020820152a10190808211610f9a577fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009116911617600155565b6113d181838661123d565b810161012082820312610caf576113e7916112f5565b8051600052602090600082526040600281600020015491838101936060855101518410611422575b505050505061141d90610fe7565b611347565b9082918151600052826000208251968782555190815191600182019485548583015196888401519373ffffffff00000000000000000000000000000000918767ffffffffffffffff9b8c978c7fffffffffffffffffffffffff000000000000000000000000000000000000000097886fffffffffffffffff00000000000000009b8c9460801b8a169616911617921b16171790556060015160028601558960038601930151938451928a8554928d8b890151901b16938d88015160801b169416911617171790556060015190600401558385519616865260070b90850152169082015260607fd06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec91a2388080808061140f565b60046040517f025dbdd4000000000000000000000000000000000000000000000000000000008152fd5b600254818102918183041490151715610f9a5790565b67ffffffffffffffff8111610e6e5760051b60200190565b80518210156110245760209160051b01019056fea26469706673582212205ca29d4e64c84ff8a8076ea4c83e65e1aa6230e6fae214f13f3e5440da9d7cb164736f6c63430008120033';

type PythMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PythMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PythMock__factory extends ContractFactory {
  constructor(...args: PythMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _validTimePeriod: BigNumberish,
    _singleUpdateFeeInWei: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _validTimePeriod,
      _singleUpdateFeeInWei,
      overrides || {},
    );
  }
  override deploy(
    _validTimePeriod: BigNumberish,
    _singleUpdateFeeInWei: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(
      _validTimePeriod,
      _singleUpdateFeeInWei,
      overrides || {},
    ) as Promise<
      PythMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PythMock__factory {
    return super.connect(runner) as PythMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PythMockInterface {
    return new Interface(_abi) as PythMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PythMock {
    return new Contract(address, _abi, runner) as unknown as PythMock;
  }
}

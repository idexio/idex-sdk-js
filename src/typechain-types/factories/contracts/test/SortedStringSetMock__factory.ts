/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  SortedStringSetMock,
  SortedStringSetMockInterface,
} from '../../../contracts/test/SortedStringSetMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string[]',
        name: 'array',
        type: 'string[]',
      },
      {
        internalType: 'string',
        name: 'element',
        type: 'string',
      },
    ],
    name: 'indexOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string[]',
        name: 'array',
        type: 'string[]',
      },
      {
        internalType: 'string',
        name: 'element',
        type: 'string',
      },
    ],
    name: 'insertSorted',
    outputs: [
      {
        internalType: 'string[]',
        name: '',
        type: 'string[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string[]',
        name: 'array1',
        type: 'string[]',
      },
      {
        internalType: 'string[]',
        name: 'array2',
        type: 'string[]',
      },
    ],
    name: 'merge',
    outputs: [
      {
        internalType: 'string[]',
        name: '',
        type: 'string[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string[]',
        name: 'array',
        type: 'string[]',
      },
      {
        internalType: 'string',
        name: 'element',
        type: 'string',
      },
    ],
    name: 'remove',
    outputs: [
      {
        internalType: 'string[]',
        name: '',
        type: 'string[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608080604052346100165761098d908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b6000803560e01c80631b4e5b941461032f5780632b8388a6146103075780638dd705dc1461025a5763e09892d21461004c57600080fd5b346102575761005a366104d5565b91908051937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9485810190811161022b576100949061075f565b938391845b84518881019081116101065781101561014f576100c0836100ba838861066e565b5161070a565b610146575b8315610132576001810180821161010657906100e4610101928761066e565b515b6100f0828a61066e565b526100fb818961066e565b50610612565b610099565b60248760118c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b80610140610101928761066e565b516100e6565b600193506100c5565b5095909192879484156101d6575b5050505015610179575061017591519182918261055d565b0390f35b60649060208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f456c656d656e7420746f2072656d6f7665206e6f7420666f756e6400000000006044820152fd5b908092939450519283019283116101ff57506101f692916100ba9161066e565b8480808061015d565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b6024846011897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b80fd5b50823461030357827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103035767ffffffffffffffff9080358281116102ff576102aa9036908301610454565b916024359081116102ff576102c191369101610454565b905b81518310156102f0576102e46102ea916102dd858561066e565b51906107c6565b92610612565b916102c3565b6101759084519182918261055d565b8380fd5b5080fd5b509034610303576101759061032461031e366104d5565b906107c6565b90519182918261055d565b5090346103035760209061034b610345366104d5565b906106b1565b9051908152f35b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761039357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116103935760051b60200190565b81601f8201121561044f5780359067ffffffffffffffff8211610393576040519261042d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610352565b8284526020838301011161044f57816000926020809301838601378301015290565b600080fd5b9080601f8301121561044f5781359061046c826103c2565b9261047a6040519485610352565b828452602092838086019160051b8301019280841161044f57848301915b8483106104a85750505050505090565b823567ffffffffffffffff811161044f5786916104ca848480948901016103da565b815201920191610498565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83011261044f5767ffffffffffffffff60043581811161044f578361052091600401610454565b9260243591821161044f57610537916004016103da565b90565b60005b83811061054d5750506000910152565b818101518382015260200161053d565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106105915750505050505090565b909192939495848080837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030187527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8c516105fe8151809281875287808801910161053a565b011601019801930193019194939290610581565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461063f5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156106825760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b81518110156106e3576106cb836100ba838561066e565b6106dd576106d890610612565b6106b4565b91505090565b5050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90565b906040519160209261073884828161072b818301968781519384920161053a565b8101038084520182610352565b5190209161075860405191828161072b818301968781519384920161053a565b5190201490565b90610769826103c2565b6107766040519182610352565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06107a482946103c2565b019060005b8281106107b557505050565b8060606020809385010152016107a9565b9190825160019081810180911161063f576107e09061075f565b93600080835b6107f2575b5050505050565b86518110156109525781610918578651917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9283810190811161063f57821080610904575b6108fa57875192830192831161063f578492821480156108a5575b15610880575084610863828961066e565b5261086e818861066e565b506108798291610612565b90916107e6565b908061088f610879928661066e565b5161089a828b61066e565b526100fb818a61066e565b506108b0828561066e565b5160409081516108f1896020926108d684828161072b818301968781519384920161053a565b519020935191828161072b818301968781519384920161053a565b51902011610852565b5091955050505050565b50610913866100ba848761066e565b610837565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820182811161063f57849261088f610879928661066e565b6107eb56fea26469706673582212204aa98159c9148bc6a06259a7463879f48f43f1640e1c67c81f48e2e92f1b04ad64736f6c63430008120033';

type SortedStringSetMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SortedStringSetMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SortedStringSetMock__factory extends ContractFactory {
  constructor(...args: SortedStringSetMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SortedStringSetMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null,
  ): SortedStringSetMock__factory {
    return super.connect(runner) as SortedStringSetMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SortedStringSetMockInterface {
    return new Interface(_abi) as SortedStringSetMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): SortedStringSetMock {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as SortedStringSetMock;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type { USDC, USDCInterface } from '../../../contracts/test/USDC';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'INITIAL_SUPPLY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'NUM_TOKENS_RELEASED_BY_FAUCET',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'wallet',
        type: 'address',
      },
    ],
    name: 'faucet',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isTransferDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'fee_',
        type: 'uint256',
      },
    ],
    name: 'setFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isTransferDisabled_',
        type: 'bool',
      },
    ],
    name: 'setIsTransferDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608034620003ef576040906001600160401b039080830182811182821017620003d957835260088152602090672aa9a21021b7b4b760c11b8282015283519084820182811085821117620003d9578552600493848352635553444360e01b84840152815192818411620003c4576003908154946001948587811c97168015620003b9575b88881014620003a4578190601f978881116200034e575b508890888311600114620002e757600092620002db575b505060001982851b1c191690851b1782555b8051928311620002c65786548481811c91168015620002bb575b87821014620002a6578581116200025b575b508590858411600114620001f057938394918492600095620001e4575b50501b92600019911b1c19161783555b3315620001a557506002546d04ee2d6d415b85acef8100000000928382018092116200019057506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a3516112ca9081620003f58239f35b601190634e487b7160e01b6000525260246000fd5b90606493519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b0151935038806200010c565b9190601f198416928860005284886000209460005b8a8983831062000243575050501062000228575b50505050811b0183556200011c565b01519060f884600019921b161c191690553880808062000219565b86860151895590970196948501948893500162000205565b87600052866000208680860160051c8201928987106200029c575b0160051c019085905b8281106200028f575050620000ef565b600081550185906200027f565b9250819262000276565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000dd565b604187634e487b7160e01b6000525260246000fd5b015190503880620000b1565b90879350601f19831691866000528a6000209260005b8c8282106200033757505084116200031e575b505050811b018255620000c3565b015160001983871b60f8161c1916905538808062000310565b8385015186558b97909501949384019301620002fd565b90915084600052886000208880850160051c8201928b86106200039a575b918991869594930160051c01915b8281106200038a5750506200009a565b600081558594508991016200037a565b925081926200036c565b602289634e487b7160e01b6000525260246000fd5b96607f169662000083565b604186634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde0314610cab57508163095ea7b314610c6357816318160ddd14610c2657816323b872dd14610bcb5781632ff2e9dc14610b84578163313ce56714610b4a57816332cb6b0c14610b025781633950935114610a885781633e0d342614610a4b57816340c10f191461094757816369fe0e2d1461090f57816370a08231146108ae5781637d72454d1461086c57816395d89b41146106765781639dc29fac146104bf578163a457c2d7146103b2578163a9059cbb14610362578163b86d1d631461022a578163d2e978ec146101be57508063dd62ed3e1461014b5763ddca3f431461010c57600080fd5b3461014757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610147576020906005549051908152f35b5080fd5b503461014757807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101475780602092610186610e4f565b61018e610e77565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b8390346101475760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014757358015158091036101475760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006006541691161760065580f35b90503461035e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035e5773ffffffffffffffffffffffffffffffffffffffff610278610e4f565b1691821561030157600254633b9aca00928382018092116102d5575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b8280fd5b50503461014757807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610147576020906103a96103a0610e4f565b60243590611058565b90519015158152f35b905082346104bc57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104bc576103eb610e4f565b918360243592338152600160205281812073ffffffffffffffffffffffffffffffffffffffff86168252602052205490828210610439576020856104328585038733610ed6565b5160018152f35b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b8391503461014757827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610147576104f8610e4f565b73ffffffffffffffffffffffffffffffffffffffff60243591169182156105f35782845283602052848420549082821061057057508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b60849060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b83833461014757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014757805190828454600181811c90808316928315610862575b60209384841081146108365783885287959493929181156107db575060011461075f575b50505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff841183851017610733575082918261072f925282610de9565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106107c557505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936106e1565b805488850187015287945092850192810161078a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b830101905081601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06106e1565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f16916106bd565b50503461014757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101475760209060ff6006541690519015158152f35b5050346101475760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610147578060209273ffffffffffffffffffffffffffffffffffffffff610900610e4f565b16815280845220549051908152f35b8390346101475760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610147573560055580f35b9190503461035e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035e57610980610e4f565b9073ffffffffffffffffffffffffffffffffffffffff60243592169283156109ef57506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926109d58795600254610e9a565b60025585855284835280852082815401905551908152a380f35b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b50503461014757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101475760209051633b9aca008152f35b50503461014757807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014757610432602092610afb610ac9610e4f565b913381526001865284812073ffffffffffffffffffffffffffffffffffffffff84168252865284602435912054610e9a565b9033610ed6565b50503461014757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014757602090516e13426172c74d822b878fe8000000008152f35b50503461014757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610147576020905160068152f35b50503461014757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014757602090516d04ee2d6d415b85acef81000000008152f35b5050346101475760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014757602090610432610c0a610e4f565b610c12610e77565b610c2060055460443561104b565b91611085565b50503461014757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610147576020906002549051908152f35b50503461014757807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014757602090610432610ca1610e4f565b6024359033610ed6565b8490843461035e57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035e5782600354600181811c90808316928315610ddf575b60209384841081146108365783885287959493929181156107db5750600114610d625750505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff841183851017610733575082918261072f925282610de9565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610dc957505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936106e1565b8054888501870152879450928501928101610d8e565b91607f1691610cf1565b60208082528251818301819052939260005b858110610e3b575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610dfb565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610e7257565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610e7257565b91908201809211610ea757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff809116918215610fc85716918215610f445760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b91908203918211610ea757565b60ff6006541661107e57611072611079926005549061104b565b9033611085565b600190565b5050600090565b73ffffffffffffffffffffffffffffffffffffffff809116918215611210571691821561118c5760008281528060205260408120549180831061110857604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220f4a5e4fdd3c2325bcc2eb0e1627eda856660cb0620304cb00d5554ec7804c11b64736f6c63430008120033';

type USDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDCConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDC__factory extends ContractFactory {
  constructor(...args: USDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      USDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): USDC__factory {
    return super.connect(runner) as USDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDCInterface {
    return new Interface(_abi) as USDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): USDC {
    return new Contract(address, _abi, runner) as unknown as USDC;
  }
}

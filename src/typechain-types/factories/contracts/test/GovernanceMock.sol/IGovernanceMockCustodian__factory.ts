/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  IGovernanceMockCustodian,
  IGovernanceMockCustodianInterface,
} from '../../../../contracts/test/GovernanceMock.sol/IGovernanceMockCustodian';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sourceAsset',
        type: 'address',
      },
    ],
    name: 'migrateAsset',
    outputs: [
      {
        internalType: 'address',
        name: 'destinationAsset',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'assetMigrator',
        type: 'address',
      },
    ],
    name: 'setAssetMigrator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'exchange',
        type: 'address',
      },
    ],
    name: 'setExchange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'governance',
        type: 'address',
      },
    ],
    name: 'setGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
] as const;

export class IGovernanceMockCustodian__factory {
  static readonly abi = _abi;
  static createInterface(): IGovernanceMockCustodianInterface {
    return new Interface(_abi) as IGovernanceMockCustodianInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): IGovernanceMockCustodian {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as IGovernanceMockCustodian;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  WithdrawExitValidationsMock,
  WithdrawExitValidationsMockInterface,
} from '../../../contracts/test/WithdrawExitValidationsMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isExitFundWallet',
        type: 'bool',
      },
      {
        internalType: 'int64',
        name: 'walletQuoteQuantityToWithdraw',
        type: 'int64',
      },
    ],
    name: 'validateExitQuoteQuantityAndCoerceIfNeeded',
    outputs: [
      {
        internalType: 'int64',
        name: '',
        type: 'int64',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6080806040523461001657610192908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63c4c449ff1461002857600080fd5b346100885760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261008857600435801515810361008b57602435918260070b830361008857602061007d848461008f565b6040519060070b8152f35b80fd5b5080fd5b158061014f575b80610112575b61010c5760008160070b126100ae5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e656761746976652071756f74652061667465722065786974000000000000006044820152fd5b50600090565b50806000600782900b8113610138575067ffffffffffffffff612710915b16111561009c565b6127109167ffffffffffffffff910360070b610130565b5060008160070b1261009656fea26469706673582212208901fec16451718b9bd9849d16d3ceb9a4c4e127d0ed213ed1013c9bf0935e1964736f6c63430008120033';

type WithdrawExitValidationsMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawExitValidationsMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawExitValidationsMock__factory extends ContractFactory {
  constructor(...args: WithdrawExitValidationsMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WithdrawExitValidationsMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null,
  ): WithdrawExitValidationsMock__factory {
    return super.connect(runner) as WithdrawExitValidationsMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawExitValidationsMockInterface {
    return new Interface(_abi) as WithdrawExitValidationsMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): WithdrawExitValidationsMock {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as WithdrawExitValidationsMock;
  }
}

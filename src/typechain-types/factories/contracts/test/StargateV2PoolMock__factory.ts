/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  StargateV2PoolMock,
  StargateV2PoolMockInterface,
} from '../../../contracts/test/StargateV2PoolMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'fee_',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'quoteTokenAddress_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'fee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ILayerZeroComposer',
        name: 'composer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_guid',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'lzCompose',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'to',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'extraOptions',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'composeMsg',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'oftCmd',
            type: 'bytes',
          },
        ],
        internalType: 'struct SendParam',
        name: '',
        type: 'tuple',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    name: 'quoteSend',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nativeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lzTokenFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct MessagingFee',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'quoteTokenAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'dstEid',
            type: 'uint32',
          },
          {
            internalType: 'bytes32',
            name: 'to',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amountLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minAmountLD',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'extraOptions',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'composeMsg',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'oftCmd',
            type: 'bytes',
          },
        ],
        internalType: 'struct SendParam',
        name: '_sendParam',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'nativeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lzTokenFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct MessagingFee',
        name: '_fee',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'send',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'guid',
            type: 'bytes32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'nativeFee',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lzTokenFee',
                type: 'uint256',
              },
            ],
            internalType: 'struct MessagingFee',
            name: 'fee',
            type: 'tuple',
          },
        ],
        internalType: 'struct MessagingReceipt',
        name: '',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amountSentLD',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amountReceivedLD',
            type: 'uint256',
          },
        ],
        internalType: 'struct OFTReceipt',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608034607a57601f61065938819003918201601f19168301916001600160401b03831184841017607f578084926040948552833981010312607a5780516020909101516001600160a01b0381169190829003607a57600055600180546001600160a01b0319169190911790556040516105c390816100968239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182633b6f743b14610428575081637fb3335d146102a5578163bad3462014610252578163c7c7f5b3146100f657508063ddca3f43146100bc5763fc0c546a1461006757600080fd5b346100b857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b85760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b50346100b857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b857602091549051908152f35b8391507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060808236011261024e57359167ffffffffffffffff918284116100b85760e090843603011261024b57837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261024b5760643573ffffffffffffffffffffffffffffffffffffffff81160361024657835160c09461019a82610532565b8282526020918383820152818051916101b2836104e7565b60008352600085840152015260008282516101cc816104e7565b82815201528051946101dd86610532565b83865282860193845260448251916101f4836104e7565b6024358352813585840152838801928352013594825194610214866104e7565b8686528486019687528351975188525116838701525190815190860152015160608401525160808301525160a0820152f35b600080fd5b80fd5b8280fd5b5050346100b857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b85760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc92915060c0368401126104245780358473ffffffffffffffffffffffffffffffffffffffff8083168093036100b8576024359281841680940361024e5767ffffffffffffffff936064358581116104205761032490369088016104b9565b93909860843591821680920361041c5760a4358781116104185761034b9036908a016104b9565b92853b156104145787938a938c519d8e998a9889977fd0a1026000000000000000000000000000000000000000000000000000000000895288015260443560248801526044870160a0905260a48701906103a49261054e565b9260648601528483030160848501526103bc9261054e565b03925af1801561040a576103ce578480f35b83116103de575052388080808480f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b83513d87823e3d90fd5b8780fd5b8680fd5b8580fd5b8480fd5b8380fd5b908492503461024e577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc908482360112610424573567ffffffffffffffff8111610424579060e091360301126100b857602435801515036100b85760208161049084936104e7565b8281520152805490602083516104a5816104e7565b838152019081528251918252516020820152f35b9181601f840112156102465782359167ffffffffffffffff8311610246576020838186019501011161024657565b6040810190811067ffffffffffffffff82111761050357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761050357604052565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601376000858286010152011601019056fea2646970667358221220518f63dc5aa8a904642d5f70ce730e6ba8cc9670ca9833227d6bdce56055d49764736f6c63430008190033';

type StargateV2PoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargateV2PoolMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargateV2PoolMock__factory extends ContractFactory {
  constructor(...args: StargateV2PoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    fee_: BigNumberish,
    quoteTokenAddress_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      fee_,
      quoteTokenAddress_,
      overrides || {},
    );
  }
  override deploy(
    fee_: BigNumberish,
    quoteTokenAddress_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(fee_, quoteTokenAddress_, overrides || {}) as Promise<
      StargateV2PoolMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StargateV2PoolMock__factory {
    return super.connect(runner) as StargateV2PoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargateV2PoolMockInterface {
    return new Interface(_abi) as StargateV2PoolMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): StargateV2PoolMock {
    return new Contract(address, _abi, runner) as unknown as StargateV2PoolMock;
  }
}
